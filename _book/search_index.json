[["index.html", "편의점 브랜드 GS25: 평판 관리 방향 제안 Chapter 1 종합 보고서 : GS25 평판 관리 방향 제안", " 편의점 브랜드 GS25: 평판 관리 방향 제안 언론홍보학과 김수진(2018102101) 2022-11-22 Chapter 1 종합 보고서 : GS25 평판 관리 방향 제안 "],["언론보도-분석을-통한-편의점-3사-평판-비교분석.html", "Chapter 2 언론보도 분석을 통한 편의점 3사 평판 비교분석", " Chapter 2 언론보도 분석을 통한 편의점 3사 평판 비교분석 2.0.1 1. 개요 2.0.1.1 1) 분석주제 및 선정 이유 분석 주제 : 언론보도 분석을 통한 편의점 평판 비교 분석 주제 선정 이유 : 최근 들어 커머스 분야가 다양해짐에 따라 대형마트, 중형마트, 온라인 커머스, 편의점 등이 각각의 장단점을 활용하여 경영전략 및 마케팅을 펼치고 있다. 그 중에서도 편의점은 소비자들의 생활반경 근처에 다수 포진해있음에 따라 적극적인 변화를 모색하고 있다. 대표적으로 원소주, 말차 등 유명 브랜드의 상품을 독점 판매하거나 tv프로그램 ‘편스토랑’ 등과 같이 콜라보 프로젝트를 진행하고 있다. 이러한 상황에서 각각의 편의점의 평판을 분석하여 어떠한 차이를 보이고 있는지 살펴보고자 한다. 2.0.1.2 2) 자료분석 방법 자료 유형 : 뉴스 (정치, 사회, 스포츠 뉴스 제외) 자료 출처 : 빅카인즈 자료 기간 : 2021. 09. 01. ~ 2022. 09. 30. (약 1년간) 자료수집 GS25 검색어 : ((GS25) OR (지에스25) OR (gs25) OR (지에스이십오)) 총 4416건의 기사 세븐일레븐 검색어 : ((코리아세븐) OR (Korea Seven Co.) OR ((주)코리아세븐) OR (주식회사 코리아세븐) OR (세븐일레븐)) 총 3520건의 기사 CU 검색어 : ((CU편의점) OR (CU) OR (CU 편의점)) 총 5241건의 기사 2.0.2 2. 자료 수집 2.0.2.1 1) 패키지 설치 package_list &lt;- c(&quot;tidyverse&quot;, &quot;tidytext&quot;, &quot;readxl&quot;, &quot;kableExtra&quot;, &quot;multilinguer&quot;, &quot;RcppMeCab&quot;, &quot;KoNLP&quot;, &quot;lubridate&quot;, &quot;tidylo&quot;, &quot;stm&quot;, &quot;reshape2&quot;, &quot;dplyr&quot;, &quot;ggplot2&quot;, &quot;stringr&quot;, &quot;rvest&quot;, &quot;wordcloud&quot;, &quot;tm&quot;, &quot;VennDiagram&quot;, &quot;gt&quot;) #package_list_installed &lt;- package_list %in% installed.packages()[,&quot;Package&quot;] # new_pkg &lt;- package_list[!package_list_installed] # if(length(new_pkg)) install.packages(new_pkg) lapply(package_list, require, character.only = TRUE) ## 필요한 패키지를 로딩중입니다: tidyverse ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ── ## ✔ ggplot2 3.3.6 ✔ purrr 0.3.4 ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10 ## ✔ tidyr 1.2.1 ✔ stringr 1.4.1 ## ✔ readr 2.1.2 ✔ forcats 0.5.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## 필요한 패키지를 로딩중입니다: tidytext ## ## 필요한 패키지를 로딩중입니다: readxl ## ## 필요한 패키지를 로딩중입니다: kableExtra ## ## ## 다음의 패키지를 부착합니다: &#39;kableExtra&#39; ## ## ## The following object is masked from &#39;package:dplyr&#39;: ## ## group_rows ## ## ## 필요한 패키지를 로딩중입니다: multilinguer ## ## 필요한 패키지를 로딩중입니다: RcppMeCab ## ## 필요한 패키지를 로딩중입니다: KoNLP ## ## Checking user defined dictionary! ## ## ## 필요한 패키지를 로딩중입니다: lubridate ## ## ## 다음의 패키지를 부착합니다: &#39;lubridate&#39; ## ## ## The following objects are masked from &#39;package:base&#39;: ## ## date, intersect, setdiff, union ## ## ## 필요한 패키지를 로딩중입니다: tidylo ## ## 필요한 패키지를 로딩중입니다: stm ## ## stm v1.3.6 successfully loaded. See ?stm for help. ## Papers, resources, and other materials at structuraltopicmodel.com ## ## 필요한 패키지를 로딩중입니다: reshape2 ## ## ## 다음의 패키지를 부착합니다: &#39;reshape2&#39; ## ## ## The following object is masked from &#39;package:tidyr&#39;: ## ## smiths ## ## ## 필요한 패키지를 로딩중입니다: rvest ## ## ## 다음의 패키지를 부착합니다: &#39;rvest&#39; ## ## ## The following object is masked from &#39;package:readr&#39;: ## ## guess_encoding ## ## ## 필요한 패키지를 로딩중입니다: wordcloud ## ## 필요한 패키지를 로딩중입니다: RColorBrewer ## ## 필요한 패키지를 로딩중입니다: tm ## ## 필요한 패키지를 로딩중입니다: NLP ## ## ## 다음의 패키지를 부착합니다: &#39;NLP&#39; ## ## ## The following object is masked from &#39;package:ggplot2&#39;: ## ## annotate ## ## ## 필요한 패키지를 로딩중입니다: VennDiagram ## ## 필요한 패키지를 로딩중입니다: grid ## ## 필요한 패키지를 로딩중입니다: futile.logger ## ## 필요한 패키지를 로딩중입니다: gt ## [[1]] ## [1] TRUE ## ## [[2]] ## [1] TRUE ## ## [[3]] ## [1] TRUE ## ## [[4]] ## [1] TRUE ## ## [[5]] ## [1] TRUE ## ## [[6]] ## [1] TRUE ## ## [[7]] ## [1] TRUE ## ## [[8]] ## [1] TRUE ## ## [[9]] ## [1] TRUE ## ## [[10]] ## [1] TRUE ## ## [[11]] ## [1] TRUE ## ## [[12]] ## [1] TRUE ## ## [[13]] ## [1] TRUE ## ## [[14]] ## [1] TRUE ## ## [[15]] ## [1] TRUE ## ## [[16]] ## [1] TRUE ## ## [[17]] ## [1] TRUE ## ## [[18]] ## [1] TRUE ## ## [[19]] ## [1] TRUE 2.0.2.2 2) 데이터셋 수집 GS25_df &lt;- readxl::read_excel(&quot;GS25_year_data.xlsx&quot;) %&gt;% select(제목, 본문) seven_df &lt;- readxl::read_excel(&quot;seveneleven_year_data.xlsx&quot;) %&gt;% select(제목, 본문) CU_df &lt;- readxl::read_excel(&quot;CU_year_data.xlsx&quot;) %&gt;% select(제목, 본문) 2.0.3 3. 자료분석-총빈도 2.0.3.1 1) GS25 GS25_df2 &lt;- GS25_df %&gt;% distinct(제목, .keep_all = T) %&gt;% mutate(ID = factor(row_number())) %&gt;% mutate(label = &quot;0&quot;) %&gt;% unite(제목, 본문, col = &quot;text&quot;, sep = &quot; &quot;) %&gt;% mutate(text = str_squish(text)) GS25_tk &lt;- GS25_df2 %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) %&gt;% count(word, sort = T) GS25_tk &lt;- GS25_tk %&gt;% filter(!word %in% c(&quot;gs&quot;, &quot;gs25&quot;, &quot;리테일&quot;, &quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) %&gt;% filter(str_length(word) &gt; 1) %&gt;% slice_max(n, n = 15) %&gt;% mutate(word = reorder(word, n)) GS25_tk %&gt;% ggplot(aes(word, n)) + geom_col() + coord_flip() + labs(title = &quot;GS25 총빈도&quot;) 2.0.3.2 2) 세븐일레븐 seven_df2 &lt;- seven_df %&gt;% distinct(제목, .keep_all = T) %&gt;% mutate(ID = factor(row_number())) %&gt;% mutate(label = &quot;0&quot;) %&gt;% unite(제목, 본문, col = &quot;text&quot;, sep = &quot; &quot;) %&gt;% mutate(text = str_squish(text)) seven_tk &lt;- seven_df2 %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) %&gt;% count(word, sort = T) seven_tk &lt;- seven_tk %&gt;% filter(!word %in% c(&quot;세븐일레븐&quot;, &quot;기자&quot;, &quot;편의점&quot;, &quot;롯데&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) %&gt;% filter(str_length(word) &gt; 1) %&gt;% slice_max(n, n = 15) %&gt;% mutate(word = reorder(word, n)) seven_tk %&gt;% ggplot(aes(word, n)) + geom_col() + coord_flip() + labs(title = &quot;세븐일레븐 총빈도&quot;) 2.0.3.3 3) CU CU_df2 &lt;- CU_df %&gt;% distinct(제목, .keep_all = T) %&gt;% mutate(ID = factor(row_number())) %&gt;% mutate(label = &quot;0&quot;) %&gt;% unite(제목, 본문, col = &quot;text&quot;, sep = &quot; &quot;) %&gt;% mutate(text = str_squish(text)) CU_tk &lt;- CU_df2 %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) %&gt;% count(word, sort = T) CU_tk &lt;- CU_tk %&gt;% filter(!word %in% c(&quot;cu&quot;, &quot;기자&quot;, &quot;편의점&quot;, &quot;리테일&quot;, &quot;bgf&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) %&gt;% filter(str_length(word) &gt; 1) %&gt;% slice_max(n, n = 15) %&gt;% mutate(word = reorder(word, n)) CU_tk %&gt;% ggplot(aes(word, n)) + geom_col() + coord_flip() + labs(title = &quot;CU 총빈도&quot;) 2.0.3.4 4) 분석 편의점 3사에서 중복으로 나타나는 단어, ‘키트’는 코로나 상황으로 인한 ’코로나 자가진단키트’ 판매와 연관되어 있음을 알 수 있음. 편의점 3사에서 ‘소주’, ‘맥주’, ‘와인’ 등 주류 관련 단어 반복적으로 나타남. 2.0.4 4. 자료분석-상대빈도 2.0.4.1 1) GS25, 세븐일레븐 weighted_log_odds_df1 &lt;- bind_rows(GS25_tk, seven_tk, .id = &quot;party&quot;) %&gt;% bind_log_odds(set = party, feature = word, n = n) %&gt;% arrange(-log_odds_weighted) library(gt) library(dplyr) GS25.seven_df &lt;- bind_cols( weighted_log_odds_df1 %&gt;% group_by(party = ifelse(party == 1, &quot;GS25&quot;, &quot;세븐일레븐&quot;)) %&gt;% arrange(party) %&gt;% select(-party) %&gt;% head(15), weighted_log_odds_df1 %&gt;% group_by(party = ifelse(party == 1, &quot;GS25&quot;, &quot;세븐일레븐&quot;)) %&gt;% arrange(desc(party)) %&gt;% select(-party) %&gt;% head(15) ) ## Adding missing grouping variables: `party` ## Adding missing grouping variables: `party` ## New names: GS25.seven_df &lt;- GS25.seven_df[-c(1,5)] GS25.seven_df %&gt;% gt() %&gt;% tab_header( &quot;상대적으로 많이 사용한 단어&quot; ) %&gt;% tab_spanner( label = &quot;GS25 기준&quot;, columns = 1:3 ) %&gt;% tab_spanner( label = &quot;세븐일레븐 기준&quot;, columns = 4:6 ) %&gt;% cols_label( word...2 = &quot;명사&quot;, n...3 = &quot;빈도&quot;, log_odds_weighted...4 = &quot;가중상대빈도&quot;, word...6 = &quot;명사&quot;, n...7 = &quot;빈도&quot;, log_odds_weighted...8 = &quot;가중상대빈도&quot; ) %&gt;% fmt_number( columns = starts_with(&quot;log&quot;), decimals = 2 ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #dqarrrxfyo .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #dqarrrxfyo .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dqarrrxfyo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #dqarrrxfyo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #dqarrrxfyo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dqarrrxfyo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dqarrrxfyo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #dqarrrxfyo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #dqarrrxfyo .gt_column_spanner_outer:first-child { padding-left: 0; } #dqarrrxfyo .gt_column_spanner_outer:last-child { padding-right: 0; } #dqarrrxfyo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #dqarrrxfyo .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #dqarrrxfyo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #dqarrrxfyo .gt_from_md > :first-child { margin-top: 0; } #dqarrrxfyo .gt_from_md > :last-child { margin-bottom: 0; } #dqarrrxfyo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #dqarrrxfyo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #dqarrrxfyo .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #dqarrrxfyo .gt_row_group_first td { border-top-width: 2px; } #dqarrrxfyo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dqarrrxfyo .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #dqarrrxfyo .gt_first_summary_row.thick { border-top-width: 2px; } #dqarrrxfyo .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dqarrrxfyo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dqarrrxfyo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #dqarrrxfyo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #dqarrrxfyo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dqarrrxfyo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dqarrrxfyo .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #dqarrrxfyo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dqarrrxfyo .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #dqarrrxfyo .gt_left { text-align: left; } #dqarrrxfyo .gt_center { text-align: center; } #dqarrrxfyo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #dqarrrxfyo .gt_font_normal { font-weight: normal; } #dqarrrxfyo .gt_font_bold { font-weight: bold; } #dqarrrxfyo .gt_font_italic { font-style: italic; } #dqarrrxfyo .gt_super { font-size: 65%; } #dqarrrxfyo .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #dqarrrxfyo .gt_asterisk { font-size: 100%; vertical-align: 0; } #dqarrrxfyo .gt_indent_1 { text-indent: 5px; } #dqarrrxfyo .gt_indent_2 { text-indent: 10px; } #dqarrrxfyo .gt_indent_3 { text-indent: 15px; } #dqarrrxfyo .gt_indent_4 { text-indent: 20px; } #dqarrrxfyo .gt_indent_5 { text-indent: 25px; } 상대적으로 많이 사용한 단어 GS25 기준 세븐일레븐 기준 명사 빈도 가중상대빈도 명사 빈도 가중상대빈도 gs25는 787 18.36 배달 534 18.05 운영 781 18.29 브랜드 534 18.05 매출 673 16.89 와인 515 17.70 고객 647 16.54 시장 474 16.95 점포 626 16.25 들이 461 16.70 소주 791 0.48 서비스 770 3.06 맥주 672 0.02 업계 784 1.93 cu 719 −0.33 키트 559 1.40 가격 660 −0.97 출시 941 1.38 상품 1296 −1.15 판매 959 1.29 판매 1228 −1.19 상품 1003 1.25 출시 1190 −1.28 가격 528 1.05 키트 664 −1.29 cu 514 0.36 업계 901 −1.79 맥주 452 −0.02 서비스 745 −2.86 소주 492 −0.52 주류와 관련하여 GS25는 ‘소주’, ’맥주’가, 세븐일레븐은 ’와인’이 상대적으로 빈도가 나타남. GS25의 경우, CU 언급이 많은 것으로 보아 직접적인 비교대상임을 알 수 있음. 2.0.4.2 2) GS25, CU weighted_log_odds_df2 &lt;- bind_rows(GS25_tk, CU_tk, .id = &quot;party&quot;) %&gt;% bind_log_odds(set = party, feature = word, n = n) %&gt;% arrange(-log_odds_weighted) library(gt) library(dplyr) GS25.CU_df &lt;- bind_cols( weighted_log_odds_df2 %&gt;% group_by(party = ifelse(party == 1, &quot;GS25&quot;, &quot;CU&quot;)) %&gt;% arrange(party) %&gt;% select(-party) %&gt;% head(15), weighted_log_odds_df2 %&gt;% group_by(party = ifelse(party == 1, &quot;GS25&quot;, &quot;CU&quot;)) %&gt;% arrange(desc(party)) %&gt;% select(-party) %&gt;% head(15) ) ## Adding missing grouping variables: `party` ## Adding missing grouping variables: `party` ## New names: GS25.CU_df &lt;- GS25.CU_df[-c(1,5)] GS25.CU_df %&gt;% gt() %&gt;% tab_header( &quot;상대적으로 많이 사용한 단어&quot; ) %&gt;% tab_spanner( label = &quot;GS25 기준&quot;, columns = 1:3 ) %&gt;% tab_spanner( label = &quot;CU 기준&quot;, columns = 4:6 ) %&gt;% cols_label( word...2 = &quot;명사&quot;, n...3 = &quot;빈도&quot;, log_odds_weighted...4 = &quot;가중상대빈도&quot;, word...6 = &quot;명사&quot;, n...7 = &quot;빈도&quot;, log_odds_weighted...8 = &quot;가중상대빈도&quot; ) %&gt;% fmt_number( columns = starts_with(&quot;log&quot;), decimals = 2 ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #rzrtkecsyj .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #rzrtkecsyj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rzrtkecsyj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #rzrtkecsyj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #rzrtkecsyj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rzrtkecsyj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rzrtkecsyj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #rzrtkecsyj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #rzrtkecsyj .gt_column_spanner_outer:first-child { padding-left: 0; } #rzrtkecsyj .gt_column_spanner_outer:last-child { padding-right: 0; } #rzrtkecsyj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #rzrtkecsyj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #rzrtkecsyj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #rzrtkecsyj .gt_from_md > :first-child { margin-top: 0; } #rzrtkecsyj .gt_from_md > :last-child { margin-bottom: 0; } #rzrtkecsyj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #rzrtkecsyj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #rzrtkecsyj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #rzrtkecsyj .gt_row_group_first td { border-top-width: 2px; } #rzrtkecsyj .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rzrtkecsyj .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #rzrtkecsyj .gt_first_summary_row.thick { border-top-width: 2px; } #rzrtkecsyj .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rzrtkecsyj .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rzrtkecsyj .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #rzrtkecsyj .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #rzrtkecsyj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rzrtkecsyj .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rzrtkecsyj .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #rzrtkecsyj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rzrtkecsyj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #rzrtkecsyj .gt_left { text-align: left; } #rzrtkecsyj .gt_center { text-align: center; } #rzrtkecsyj .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #rzrtkecsyj .gt_font_normal { font-weight: normal; } #rzrtkecsyj .gt_font_bold { font-weight: bold; } #rzrtkecsyj .gt_font_italic { font-style: italic; } #rzrtkecsyj .gt_super { font-size: 65%; } #rzrtkecsyj .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #rzrtkecsyj .gt_asterisk { font-size: 100%; vertical-align: 0; } #rzrtkecsyj .gt_indent_1 { text-indent: 5px; } #rzrtkecsyj .gt_indent_2 { text-indent: 10px; } #rzrtkecsyj .gt_indent_3 { text-indent: 15px; } #rzrtkecsyj .gt_indent_4 { text-indent: 20px; } #rzrtkecsyj .gt_indent_5 { text-indent: 25px; } 상대적으로 많이 사용한 단어 GS25 기준 CU 기준 명사 빈도 가중상대빈도 명사 빈도 가중상대빈도 제품 648 17.75 소주 791 20.51 인기 634 17.54 gs25는 787 20.46 들이 624 17.40 cu 719 19.50 서비스 1047 1.92 판매 1228 1.03 맥주 906 1.50 고객 647 0.31 업계 1135 1.20 점포 626 0.10 매출 868 1.18 운영 781 −0.36 출시 1408 0.81 상품 1296 −0.60 가격 805 0.78 키트 664 −0.65 키트 793 0.64 가격 660 −0.80 상품 1493 0.59 출시 1190 −0.83 운영 890 0.36 매출 673 −1.21 점포 668 −0.10 업계 901 −1.23 고객 669 −0.30 맥주 672 −1.54 판매 1190 −1.02 서비스 745 −1.97 주류와 관련하여 GS25는 ‘맥주’가, CU는 ’소주’가 상대적으로 빈도가 높게 나타남. 1개월 정보량에서는 GS25의 ’소주’ 단어빈도가 앞도적으로 높았으나 1년 정보량을 기준으로 하였을 때는 다른 양상을 보이고 있음을 확인함. 2.0.4.3 3) 세븐일레븐, CU weighted_log_odds_df3 &lt;- bind_rows(seven_tk, CU_tk, .id = &quot;party&quot;) %&gt;% bind_log_odds(set = party, feature = word, n = n) %&gt;% arrange(-log_odds_weighted) library(gt) library(dplyr) seven.CU_df &lt;- bind_cols( weighted_log_odds_df3 %&gt;% group_by(party = ifelse(party == 1, &quot;세븐일레븐&quot;, &quot;CU&quot;)) %&gt;% arrange(party) %&gt;% select(-party) %&gt;% head(15), weighted_log_odds_df2 %&gt;% group_by(party = ifelse(party == 1, &quot;세븐일레븐&quot;, &quot;CU&quot;)) %&gt;% arrange(desc(party)) %&gt;% select(-party) %&gt;% head(15) ) ## Adding missing grouping variables: `party` ## Adding missing grouping variables: `party` ## New names: seven.CU_df &lt;- seven.CU_df[-c(1,5)] seven.CU_df %&gt;% gt() %&gt;% tab_header( &quot;상대적으로 많이 사용한 단어&quot; ) %&gt;% tab_spanner( label = &quot;세븐일레븐 기준&quot;, columns = 1:3 ) %&gt;% tab_spanner( label = &quot;CU 기준&quot;, columns = 4:6 ) %&gt;% cols_label( word...2 = &quot;명사&quot;, n...3 = &quot;빈도&quot;, log_odds_weighted...4 = &quot;가중상대빈도&quot;, word...6 = &quot;명사&quot;, n...7 = &quot;빈도&quot;, log_odds_weighted...8 = &quot;가중상대빈도&quot; ) %&gt;% fmt_number( columns = starts_with(&quot;log&quot;), decimals = 2 ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #bwvgbaljpa .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #bwvgbaljpa .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bwvgbaljpa .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #bwvgbaljpa .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #bwvgbaljpa .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bwvgbaljpa .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bwvgbaljpa .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #bwvgbaljpa .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #bwvgbaljpa .gt_column_spanner_outer:first-child { padding-left: 0; } #bwvgbaljpa .gt_column_spanner_outer:last-child { padding-right: 0; } #bwvgbaljpa .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #bwvgbaljpa .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #bwvgbaljpa .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #bwvgbaljpa .gt_from_md > :first-child { margin-top: 0; } #bwvgbaljpa .gt_from_md > :last-child { margin-bottom: 0; } #bwvgbaljpa .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #bwvgbaljpa .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #bwvgbaljpa .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #bwvgbaljpa .gt_row_group_first td { border-top-width: 2px; } #bwvgbaljpa .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bwvgbaljpa .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #bwvgbaljpa .gt_first_summary_row.thick { border-top-width: 2px; } #bwvgbaljpa .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bwvgbaljpa .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bwvgbaljpa .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #bwvgbaljpa .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #bwvgbaljpa .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bwvgbaljpa .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bwvgbaljpa .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #bwvgbaljpa .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bwvgbaljpa .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #bwvgbaljpa .gt_left { text-align: left; } #bwvgbaljpa .gt_center { text-align: center; } #bwvgbaljpa .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #bwvgbaljpa .gt_font_normal { font-weight: normal; } #bwvgbaljpa .gt_font_bold { font-weight: bold; } #bwvgbaljpa .gt_font_italic { font-style: italic; } #bwvgbaljpa .gt_super { font-size: 65%; } #bwvgbaljpa .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #bwvgbaljpa .gt_asterisk { font-size: 100%; vertical-align: 0; } #bwvgbaljpa .gt_indent_1 { text-indent: 5px; } #bwvgbaljpa .gt_indent_2 { text-indent: 10px; } #bwvgbaljpa .gt_indent_3 { text-indent: 15px; } #bwvgbaljpa .gt_indent_4 { text-indent: 20px; } #bwvgbaljpa .gt_indent_5 { text-indent: 25px; } 상대적으로 많이 사용한 단어 세븐일레븐 기준 CU 기준 명사 빈도 가중상대빈도 명사 빈도 가중상대빈도 운영 890 18.87 소주 791 20.51 매출 868 18.62 gs25는 787 20.46 고객 669 16.20 cu 719 19.50 점포 668 16.18 판매 1228 1.03 제품 648 15.92 고객 647 0.31 인기 634 15.74 점포 626 0.10 맥주 906 0.82 운영 781 −0.36 가격 805 −0.74 상품 1296 −0.60 키트 793 −1.18 키트 664 −0.65 출시 1408 −1.19 가격 660 −0.80 상품 1493 −1.28 출시 1190 −0.83 들이 624 −1.29 매출 673 −1.21 업계 1135 −1.29 업계 901 −1.23 서비스 1047 −1.70 맥주 672 −1.54 판매 1190 −2.62 서비스 745 −1.97 주류와 관련하여 세븐일레븐은 ’맥주’가, CU는 ’소주’가 상대적으로 빈도가 높게 나타남. 2.0.5 5. 감정분석 2.0.5.1 1) 사전 데이터 프레임 만들기 # pkg_v &lt;- c(&quot;tidyverse&quot;, &quot;tidytext&quot;, &quot;epubr&quot;, &quot;RcppMeCab&quot;, &quot;KoNLP&quot; ) # lapply(pkg_v, require, ch = T) # url_v &lt;- &quot;https://github.com/park1200656/KnuSentiLex/archive/refs/heads/master.zip&quot; # dest_v &lt;- &quot;data/knusenti.zip&quot; # download.file(url = url_v, destfile = dest_v, mode = &quot;wb&quot;) # unzip(&quot;knusenti.zip&quot;, exdir=outPath) senti_name_v &lt;- list.files(&quot;data/knusenti/KnuSentiLex-master/.&quot;)[9] senti_dic_df &lt;- read_tsv(str_c(&quot;data/knusenti/KnuSentiLex-master/&quot;, senti_name_v), col_names = F) ## Rows: 14855 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;\\t&quot; ## chr (1): X1 ## dbl (1): X2 ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. senti_dic_df &lt;- senti_dic_df %&gt;% rename(word = X1, sScore = X2) knu_dic_df &lt;- senti_dic_df %&gt;% filter(!is.na(sScore)) 2.0.5.2 2) GS25 GS25_senti_df &lt;- GS25_df2 %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% count(word, sScore, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% mutate(word = reorder(word, n)) %&gt;% slice_head(n = 20) ## Joining, by = &quot;word&quot; GS25_senti_df %&gt;% ggplot() + geom_col(aes(n, word, fill = sScore), show.legend = F) + labs(title = &quot;GS25 감정빈도 분석&quot;) GS25 긍정 이미지 : ‘할인’, ‘이벤트’, ‘혜택’ (할인 위주) GS25 부정 이미지 : ‘부담’, ‘화재’ 단어의 경우 부정적인 단어를 활용하여 마케팅을 하면서 나타남. ‘편의점 택배 부담없이 GS25, 반값택배’, ‘화재 시, GS25 소화기 제공’ 문구 활용을 볼 수 있음. ’피해’의 경우, ’국내 최초 가맹점 사기 피해 보상 보험 지원’과 ’남혐 논란, GS25피해 CU로’라는 내용으로 살펴볼 수 있음. 2.0.5.3 3) 세븐일레븐 seven_senti_df &lt;- seven_df2 %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% count(word, sScore, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% mutate(word = reorder(word, n)) %&gt;% slice_head(n = 20) ## Joining, by = &quot;word&quot; seven_senti_df %&gt;% ggplot() + geom_col(aes(n, word, fill = sScore), show.legend = F) + labs(title = &quot;세븐일레븐 감정빈도 분석&quot;) 세븐일레븐 긍정 이미지 : ‘할인’, ‘혜택’, ‘이벤트’ (할인 중심) 세븐일레븐 부정 이미지 : ‘부담’의 경우 ’학생 맞춤형 도시락…부담을 낮췄다’, ‘식사 후 커피 부담되는데..반값커피’ 등 물가 부담과 대비되는 제품을 출시하면서 단어 빈도가 높아짐. ’피해’는 지난 9월에 발생한 태풍 피해를 의미하고 있음. 2.0.5.4 4) CU CU_senti_df &lt;- CU_df2 %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% count(word, sScore, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% mutate(word = reorder(word, n)) %&gt;% slice_head(n = 20) ## Joining, by = &quot;word&quot; CU_senti_df %&gt;% ggplot() + geom_col(aes(n, word, fill = sScore), show.legend = F) + labs(title = &quot;CU 감정빈도 분석&quot;) CU 긍정 이미지 : ‘할인’, ‘이벤트’, ‘혜택’ (할인 중심) CU 부정 이미지 : ’부담’의 경우, ’부담없이’라는 카피를 반복적으로 사용함으로써 빈도가 높게 나타남. 2.0.6 6. 감정분석 - 긍정어, 부정어 2.0.6.1 1) GS25 GS25_df2 %&gt;% unnest_tokens(word, text) %&gt;% left_join(knu_dic_df) %&gt;% mutate(sScore = ifelse(sScore &gt;= 1, &quot;긍정&quot;, ifelse(sScore &lt;= -1, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% count(sScore) ## Joining, by = &quot;word&quot; ## # A tibble: 4 × 2 ## sScore n ## &lt;chr&gt; &lt;int&gt; ## 1 긍정 3326 ## 2 부정 959 ## 3 중립 104 ## 4 &lt;NA&gt; 248995 GS25_df2 %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% mutate(emotion = ifelse(sScore &gt; 0, &quot;긍정&quot;, ifelse(sScore &lt; 0, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% mutate(label = ifelse(sScore &gt; 0, &quot;1&quot;, ifelse(sScore &lt; 0, &quot;0&quot;, &quot;2&quot;))) %&gt;% filter(label != &quot;중립&quot;) %&gt;% count(word, emotion, label, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% group_by(label = ifelse(label &gt; 0, &quot;긍정&quot;, &quot;부정&quot;)) %&gt;% slice_head(n = 15) %&gt;% ggplot(aes(x = n, y = reorder(word, n), fill = label)) + geom_col(show.legend = F) + facet_wrap(~label, scale = &quot;free&quot;) + labs(title = &quot;GS25 긍정어 부정어&quot;) ## Joining, by = &quot;word&quot; 2.0.6.2 2) 세븐일레븐 seven_df2 %&gt;% unnest_tokens(word, text) %&gt;% left_join(knu_dic_df) %&gt;% mutate(sScore = ifelse(sScore &gt;= 1, &quot;긍정&quot;, ifelse(sScore &lt;= -1, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% count(sScore) ## Joining, by = &quot;word&quot; ## # A tibble: 4 × 2 ## sScore n ## &lt;chr&gt; &lt;int&gt; ## 1 긍정 2621 ## 2 부정 674 ## 3 중립 73 ## 4 &lt;NA&gt; 192471 seven_df2 %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% mutate(emotion = ifelse(sScore &gt; 0, &quot;긍정&quot;, ifelse(sScore &lt; 0, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% mutate(label = ifelse(sScore &gt; 0, &quot;1&quot;, ifelse(sScore &lt; 0, &quot;0&quot;, &quot;2&quot;))) %&gt;% filter(label != &quot;중립&quot;) %&gt;% count(word, emotion, label, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% group_by(label = ifelse(label &gt; 0, &quot;긍정&quot;, &quot;부정&quot;)) %&gt;% slice_head(n = 15) %&gt;% ggplot(aes(x = n, y = reorder(word, n), fill = label)) + geom_col(show.legend = F) + facet_wrap(~label, scale = &quot;free&quot;) + labs(title = &quot;세븐일레븐 긍정어 부정어&quot;) ## Joining, by = &quot;word&quot; 2.0.6.3 3) CU CU_df2 %&gt;% unnest_tokens(word, text) %&gt;% left_join(knu_dic_df) %&gt;% mutate(sScore = ifelse(sScore &gt;= 1, &quot;긍정&quot;, ifelse(sScore &lt;= -1, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% count(sScore) ## Joining, by = &quot;word&quot; ## # A tibble: 4 × 2 ## sScore n ## &lt;chr&gt; &lt;int&gt; ## 1 긍정 4110 ## 2 부정 1014 ## 3 중립 98 ## 4 &lt;NA&gt; 294150 CU_df2 %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% mutate(emotion = ifelse(sScore &gt; 0, &quot;긍정&quot;, ifelse(sScore &lt; 0, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% mutate(label = ifelse(sScore &gt; 0, &quot;1&quot;, ifelse(sScore &lt; 0, &quot;0&quot;, &quot;2&quot;))) %&gt;% filter(label != &quot;중립&quot;) %&gt;% count(word, emotion, label, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% group_by(label = ifelse(label &gt; 0, &quot;긍정&quot;, &quot;부정&quot;)) %&gt;% slice_head(n = 15) %&gt;% ggplot(aes(x = n, y = reorder(word, n), fill = label)) + geom_col(show.legend = F) + facet_wrap(~label, scale = &quot;free&quot;) + labs(title = &quot;CU 긍정어 부정어&quot;) ## Joining, by = &quot;word&quot; 2.0.7 7. 토픽모델링 2.0.7.1 1) GS25 GS25_topic_tk &lt;- GS25_df2 %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) GS25_topic_tk &lt;- GS25_topic_tk %&gt;% filter(!word %in% c(&quot;gs&quot;, &quot;gs25&quot;, &quot;리테일&quot;, &quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) GS25_combined_df &lt;- GS25_topic_tk %&gt;% group_by(ID) %&gt;% summarise(text2 = str_flatten(word, &quot; &quot;)) %&gt;% ungroup() %&gt;% inner_join(GS25_df2, by = &quot;ID&quot;) library(stm) library(tm) processed &lt;- GS25_df2 %&gt;% textProcessor( documents = GS25_combined_df$text2, metadata = ., wordLengths = c(2, Inf) ) ## Building corpus... ## Converting to Lower Case... ## Removing punctuation... ## Removing stopwords... ## Removing numbers... ## Stemming... ## Creating Output... out &lt;- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 0) docs &lt;- out$documents vocab &lt;- out$vocab meta &lt;- out$meta topicN &lt;- c(3, 10) #storage &lt;- searchK(out$documents, out$vocab, K = topicN) GS25_stm_fit &lt;- stm( documents = docs, vocab = vocab, K = 6, data = meta, max.em.its = 75, init.type = &quot;Spectral&quot;, seed = 25, verbose = F ) #labelTopics(GS25_stm_fit) GS25_topic_name &lt;- tibble(topic = 1:6, name = c(&quot;1. 사업 경영&quot;, &quot;2. 점포 운영&quot;, &quot;3. 경쟁&quot;, &quot;4. 판매, 출시&quot;, &quot;5. 배송, 온라인&quot;, &quot;6. 프로모션&quot;)) GS25_td_beta &lt;- GS25_stm_fit %&gt;% tidy(matrix = &#39;beta&#39;) GS25_topic_name &lt;- GS25_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 7) %&gt;% left_join(GS25_topic_name, by = &quot;topic&quot;) GS25_topic_name %&gt;% ggplot(aes(x = beta, y = reorder_within(term, beta, name), # 각 주제별로 재정렬 fill = name)) + geom_col(show.legend = F) + facet_wrap(~name, scales = &quot;free&quot;) + scale_y_reordered() + # 재정렬한 y축의 값 설정 labs(x = expression(&quot;단어 확률분포: &quot;~beta), y = NULL, title = &quot;GS25 주제별 단어 확률 분포&quot;, subtitle = &quot;주제별로 다른 단어들로 군집&quot;) + theme(plot.title = element_text(size = 20)) 2.0.7.2 2) 세븐일레븐 seven_topic_tk &lt;- seven_df2 %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) seven_topic_tk &lt;- seven_topic_tk %&gt;% filter(!word %in% c(&quot;세븐일레븐&quot;, &quot;기자&quot;, &quot;편의점&quot;, &quot;롯데&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) seven_combined_df &lt;- seven_topic_tk %&gt;% group_by(ID) %&gt;% summarise(text2 = str_flatten(word, &quot; &quot;)) %&gt;% ungroup() %&gt;% inner_join(seven_df2, by = &quot;ID&quot;) library(stm) library(tm) processed &lt;- seven_df2 %&gt;% textProcessor( documents = seven_combined_df$text2, metadata = ., wordLengths = c(2, Inf) ) ## Building corpus... ## Converting to Lower Case... ## Removing punctuation... ## Removing stopwords... ## Removing numbers... ## Stemming... ## Creating Output... out &lt;- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 0) docs &lt;- out$documents vocab &lt;- out$vocab meta &lt;- out$meta topicN &lt;- c(3, 10) #storage &lt;- searchK(out$documents, out$vocab, K = topicN) seven_stm_fit &lt;- stm( documents = docs, vocab = vocab, K = 6, data = meta, max.em.its = 75, init.type = &quot;Spectral&quot;, seed = 25, verbose = F ) #labelTopics(seven_stm_fit) seven_topic_name &lt;- tibble(topic = 1:6, name = c(&quot;1. 신제품&quot;, &quot;2. 프로모션&quot;, &quot;3. 콜라보레이션&quot;, &quot;4. 코로나 상황&quot;, &quot;5. 매출&quot;, &quot;6. 배달, 모빌리티&quot;)) seven_td_beta &lt;- seven_stm_fit %&gt;% tidy(matrix = &#39;beta&#39;) seven_topic_name &lt;- seven_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 7) %&gt;% left_join(seven_topic_name, by = &quot;topic&quot;) seven_topic_name %&gt;% ggplot(aes(x = beta, y = reorder_within(term, beta, name), # 각 주제별로 재정렬 fill = name)) + geom_col(show.legend = F) + facet_wrap(~name, scales = &quot;free&quot;) + scale_y_reordered() + # 재정렬한 y축의 값 설정 labs(x = expression(&quot;단어 확률분포: &quot;~beta), y = NULL, title = &quot;세븐일레븐 주제별 단어 확률 분포&quot;, subtitle = &quot;주제별로 다른 단어들로 군집&quot;) + theme(plot.title = element_text(size = 20)) 2.0.7.3 3) CU CU_topic_tk &lt;- CU_df2 %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) CU_topic_tk &lt;- CU_topic_tk %&gt;% filter(!word %in% c(&quot;cu&quot;, &quot;기자&quot;, &quot;편의점&quot;, &quot;리테일&quot;, &quot;bgf&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) CU_combined_df &lt;- CU_topic_tk %&gt;% group_by(ID) %&gt;% summarise(text2 = str_flatten(word, &quot; &quot;)) %&gt;% ungroup() %&gt;% inner_join(CU_df2, by = &quot;ID&quot;) library(stm) library(tm) processed &lt;- CU_df2 %&gt;% textProcessor( documents = CU_combined_df$text2, metadata = ., wordLengths = c(2, Inf) ) ## Building corpus... ## Converting to Lower Case... ## Removing punctuation... ## Removing stopwords... ## Removing numbers... ## Stemming... ## Creating Output... out &lt;- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 0) docs &lt;- out$documents vocab &lt;- out$vocab meta &lt;- out$meta topicN &lt;- c(3, 10) #storage &lt;- searchK(out$documents, out$vocab, K = topicN) CU_stm_fit &lt;- stm( documents = docs, vocab = vocab, K = 6, data = meta, max.em.its = 75, init.type = &quot;Spectral&quot;, seed = 25, verbose = F ) #labelTopics(CU_stm_fit) CU_topic_name &lt;- tibble(topic = 1:6, name = c(&quot;1. 제휴, 운영&quot;, &quot;2. 경쟁&quot;, &quot;3. 코로나 상황&quot;, &quot;4. 매출, 운영&quot;, &quot;5. 출시, 판매&quot;, &quot;6. 브랜드 캠페인&quot;)) CU_td_beta &lt;- CU_stm_fit %&gt;% tidy(matrix = &#39;beta&#39;) CU_topic_name &lt;- CU_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 7) %&gt;% left_join(CU_topic_name, by = &quot;topic&quot;) CU_topic_name %&gt;% ggplot(aes(x = beta, y = reorder_within(term, beta, name), # 각 주제별로 재정렬 fill = name)) + geom_col(show.legend = F) + facet_wrap(~name, scales = &quot;free&quot;) + scale_y_reordered() + # 재정렬한 y축의 값 설정 labs(x = expression(&quot;단어 확률분포: &quot;~beta), y = NULL, title = &quot;CU 주제별 단어 확률 분포&quot;, subtitle = &quot;주제별로 다른 단어들로 군집&quot;) + theme(plot.title = element_text(size = 20)) 2.0.8 8. 관련보도 상위 주제어 2.0.8.1 1) GS25 GS25_td_gamma &lt;- GS25_stm_fit %&gt;% tidy(matrix = &quot;gamma&quot;) GS25_top_terms &lt;- GS25_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 5) %&gt;% select(topic, term) %&gt;% summarise(terms = str_flatten(term, collapse = &quot;, &quot;)) GS25_gamma_terms &lt;- GS25_td_gamma %&gt;% group_by(topic) %&gt;% summarise(gamma = mean(gamma)) %&gt;% left_join(GS25_top_terms, by = &#39;topic&#39;) %&gt;% left_join(GS25_topic_name, by = &#39;topic&#39;) GS25_gamma_terms %&gt;% ggplot(aes(x = gamma, y = reorder(name, gamma), fill = name)) + geom_col(show.legend = F) + geom_text(aes(label = round(gamma, 2)), # 소수점 2자리 hjust = 1.15) + # 라벨을 막대도표 안쪽으로 이동 geom_text(aes(label = terms), hjust = -0.05) + # 단어를 막대도표 바깥으로 이동 #scale_x_continuous(expand = c(0, 0), # x축 막대 위치를 Y축쪽으로 조정 # limit = c(0, 1)) + # x축 범위 설정 labs(x = expression(&quot;문서 확률분포&quot;~(gamma)), y = NULL, title = &quot;GS25 관련보도 상위 주제어&quot;, subtitle = &quot;주제별로 기여도가 높은 단어 중심&quot;) + theme(plot.title = element_text(size = 20)) ’사업경영’과 관련하여 GS25가 쿠캣마켓과 요기요를 인수한 점을 확인함. 동시에 세븐일레븐이 미니스톱을 인수한 내용도 함께 살펴볼 수 있음. 소주, 맥주, 코로나진단키트가 GS25의 주요 판매품인 것을 확인할 수 있음. 은행, 택배의 역할들을 가져오려는 모습들이 보이고, 운영에 있어 컨테이너 무인점포를 운영한 것이 큰 이슈가 됨. 2.0.8.2 2) 세븐일레븐 seven_td_gamma &lt;- seven_stm_fit %&gt;% tidy(matrix = &quot;gamma&quot;) seven_top_terms &lt;- seven_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 5) %&gt;% select(topic, term) %&gt;% summarise(terms = str_flatten(term, collapse = &quot;, &quot;)) seven_gamma_terms &lt;- seven_td_gamma %&gt;% group_by(topic) %&gt;% summarise(gamma = mean(gamma)) %&gt;% left_join(seven_top_terms, by = &#39;topic&#39;) %&gt;% left_join(seven_topic_name, by = &#39;topic&#39;) seven_gamma_terms %&gt;% ggplot(aes(x = gamma, y = reorder(name, gamma), fill = name)) + geom_col(show.legend = F) + geom_text(aes(label = round(gamma, 2)), # 소수점 2자리 hjust = 1.15) + # 라벨을 막대도표 안쪽으로 이동 geom_text(aes(label = terms), hjust = -0.05) + # 단어를 막대도표 바깥으로 이동 #scale_x_continuous(expand = c(0, 0), # x축 막대 위치를 Y축쪽으로 조정 # limit = c(0, 1)) + # x축 범위 설정 labs(x = expression(&quot;문서 확률분포&quot;~(gamma)), y = NULL, title = &quot;세븐일레븐 관련보도 상위 주제어&quot;, subtitle = &quot;주제별로 기여도가 높은 단어 중심&quot;) + theme(plot.title = element_text(size = 20)) 와인이 세븐일레븐의 매출에 큰 영향을 미치고 있음을 짐작할 수 있음. 다른 편의점과 달리 배달, 로봇, 배송 등의 키워드를 통해 모빌리티에 큰 관심을 살펴볼 수 있음. 포켓몬 캐릭터를 활용한 콜라보레이션이 큰 이슈가 되었음. 2.0.8.3 3) CU CU_td_gamma &lt;- CU_stm_fit %&gt;% tidy(matrix = &quot;gamma&quot;) CU_top_terms &lt;- CU_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 5) %&gt;% select(topic, term) %&gt;% summarise(terms = str_flatten(term, collapse = &quot;, &quot;)) CU_gamma_terms &lt;- CU_td_gamma %&gt;% group_by(topic) %&gt;% summarise(gamma = mean(gamma)) %&gt;% left_join(CU_top_terms, by = &#39;topic&#39;) %&gt;% left_join(CU_topic_name, by = &#39;topic&#39;) CU_gamma_terms %&gt;% ggplot(aes(x = gamma, y = reorder(name, gamma), fill = name)) + geom_col(show.legend = F) + geom_text(aes(label = round(gamma, 2)), # 소수점 2자리 hjust = 1.15) + # 라벨을 막대도표 안쪽으로 이동 geom_text(aes(label = terms), hjust = -0.05) + # 단어를 막대도표 바깥으로 이동 #scale_x_continuous(expand = c(0, 0), # x축 막대 위치를 Y축쪽으로 조정 # limit = c(0, 1)) + # x축 범위 설정 labs(x = expression(&quot;문서 확률분포&quot;~(gamma)), y = NULL, title = &quot;CU 관련보도 상위 주제어&quot;, subtitle = &quot;주제별로 기여도가 높은 단어 중심&quot;) + theme(plot.title = element_text(size = 20)) 다른 편의점과 달리, 신제품 출시보다는 브랜드 캠페인에 많은 노력을 기울임. 마케팅에 있어서도 특정 브랜드, 캐릭터와의 콜라보레이션보다는 카드 제휴, 할인 행사 등 자체적으로 진행하는 행사가 주를 이룸. 2.0.9 9. 결론 2.0.9.1 1) 평판 비교 공통점 편의점 3사가 공통적으로 ‘코로나 자가진단키트’, ’주류’와 관련된 단어들이 다수 언급되었습니다. 그 배경을 살펴보면 다음과 같습니다. 코로나 상황에서 자가진단키트가 판매가능해지자 편의점들은 발빠르게 판매를 시작하였고, 동네를 기점으로 점포들이 많이 형성되어 있어서 소비자들이 쉽게 접근할 수 있었습니다. 더불어 편의점의 주요 판매제품이 주류임을 인지하고 이와 관련하여 단독판매, 프리미엄 매장, 제품 확대 등의 노력들이 진행하였습니다. GS25 : 스타트업 인수를 통해 사업 고도화를 진행하고, 은행 및 택배 등 다른 산업군의 역할들을 편의점에 적용하려는 시도들이 많이 언급되었습니다. 즉, ’사업확장’을 중심으로 평판을 형성하고 있음을 확인하였습니다. 세븐일레븐 : 주류 중 와인 상품 다양화를 진행하고, 포켓몬 캐릭터를 활용하여 제품을 판매하고 팝업스토어를 운영하였습니다. 즉, ’제품 브랜딩’을 중심으로 평판을 형성하고 있음을 확인하였습니다. 더불어 모빌리티 사업의 확장과 관련하여서도 높은 빈도로 언급되었습니다. CU : 카드 제휴 및 할인 행사 등의 프로모션을 중심으로 마케팅을 진행하고, 메타버스와 결합하거나 친환경을 주제로 회사 브랜드를 형성하는데 집중하고 있습니다. 즉, ’회사 브랜드 캠페인’을 중심으로 평판을 형성하고 있음을 확인하였습니다. 2.0.9.2 2) 평판 전략 방향 GS25는 마을 반경 안에서 자주 방문하는 곳들을 통합하려는 시도와 함께, 화재시 소화기를 무상 제공하는 등 일상과 밀접한 캠페인을 진행하였습니다. 즉, ’동네 주요 기점’으로 성장하려는 노력을 기사를 통해 잘 전달되었습니다. 세븐일레븐은 제품에 있어 타사와 차별화를 가지려고 노력하였습니다. 이는 곧 다른 편의점이 아닌 해당 편의점을 방문해야만 하는 이유를 제시해줌으로 좋은 전략이라고 볼 수 있습니다. 이러한 전략을 기사를 통해 더 견고히 하려는 모습이 보였습니다. CU는 기능적인 프로모션과 회사 브랜딩에 집중하였지만 각각의 요소들이 일관된 메시지(혹은 컨셉)를 보여주고 있지는 않습니다. 경쟁력을 가지기 위해서는 메시지를 분명히 하고 프로모션, 사업확장, 캠페인 등에 있어 유기적으로 일관된 컨셉을 보여주어야 할 것입니다. 그래야만 회사에서 효과적으로 평판 관리를 할 수 있을 뿐만 아니라 장기적으로 충성고객을 형성할 수 있을 것입니다. "],["언론보도-분석을-통한-편의점의-연도별-이슈-및-트렌드-비교분석.html", "Chapter 3 언론보도 분석을 통한 편의점의 연도별 이슈 및 트렌드 비교분석", " Chapter 3 언론보도 분석을 통한 편의점의 연도별 이슈 및 트렌드 비교분석 3.0.1 1. 개요 3.0.1.1 1) 분석주제 및 선정 이유 분석 주제 : 언론보도 분석을 통한 편의점의 연도별 이슈 및 트렌드 비교분석 주제 선정 이유 : 앞에서 진행한 ‘언론보도분석을 통한 편의점 3사 평판 비교분석’, ‘언론보도 분석을 통한 GS25의 연도별 평판 비교분석’ 보고서를 통해 편의점들의 사업확장 및 기업 인수를 통해 경쟁이 더 심화되고 있음을 확인하였다. 이 가운데 GS25가 편의점 트렌드에 맞춰 평판관리를 진행하고 있는지 살펴보기 위해 ’편의점의 연도별 이슈 및 트렌드’를 살펴보려고 한다. 3.0.1.2 2) 자료분석 방법 자료 유형 : 뉴스 (정치, 사회, 스포츠 뉴스 제외) 자료 출처 : 빅카인즈 자료수집 편의점 (2021) 검색어 : 편의점 자료 기간 : 2021. 01. 01. ~ 2021. 10. 31. (약 10개월) 총 3883건의 기사 편의점 (2022) 검색어 : 편의점 자료 기간 : 2022. 01. 01. ~ 2022. 10. 31. (약 10개월) 총 3532건의 기사 3.0.2 2. 자료 수집 3.0.2.1 1) 패키지 설치 package_list &lt;- c(&quot;tidyverse&quot;, &quot;tidytext&quot;, &quot;readxl&quot;, &quot;kableExtra&quot;, &quot;multilinguer&quot;, &quot;RcppMeCab&quot;, &quot;KoNLP&quot;, &quot;lubridate&quot;, &quot;tidylo&quot;, &quot;stm&quot;, &quot;reshape2&quot;, &quot;dplyr&quot;, &quot;ggplot2&quot;, &quot;stringr&quot;, &quot;rvest&quot;, &quot;wordcloud&quot;, &quot;tm&quot;, &quot;VennDiagram&quot;, &quot;gt&quot;) #package_list_installed &lt;- package_list %in% installed.packages()[,&quot;Package&quot;] # new_pkg &lt;- package_list[!package_list_installed] # if(length(new_pkg)) install.packages(new_pkg) lapply(package_list, require, character.only = TRUE) ## [[1]] ## [1] TRUE ## ## [[2]] ## [1] TRUE ## ## [[3]] ## [1] TRUE ## ## [[4]] ## [1] TRUE ## ## [[5]] ## [1] TRUE ## ## [[6]] ## [1] TRUE ## ## [[7]] ## [1] TRUE ## ## [[8]] ## [1] TRUE ## ## [[9]] ## [1] TRUE ## ## [[10]] ## [1] TRUE ## ## [[11]] ## [1] TRUE ## ## [[12]] ## [1] TRUE ## ## [[13]] ## [1] TRUE ## ## [[14]] ## [1] TRUE ## ## [[15]] ## [1] TRUE ## ## [[16]] ## [1] TRUE ## ## [[17]] ## [1] TRUE ## ## [[18]] ## [1] TRUE ## ## [[19]] ## [1] TRUE 3.0.2.2 2) 데이터셋 수집 store_2021_df &lt;- readxl::read_excel(&quot;store_21_data.xlsx&quot;) %&gt;% select(제목, 본문) store_2022_df &lt;- readxl::read_excel(&quot;store_22_data.xlsx&quot;) %&gt;% select(제목, 본문) 3.0.3 3. 자료분석-총빈도 3.0.3.1 1) 편의점 (2021. 01. 01. ~ 2021. 10. 31. / 약 10개월) store_2021_df &lt;- store_2021_df %&gt;% distinct(제목, .keep_all = T) %&gt;% mutate(ID = factor(row_number())) %&gt;% mutate(label = &quot;0&quot;) %&gt;% unite(제목, 본문, col = &quot;text&quot;, sep = &quot; &quot;) %&gt;% mutate(text = str_squish(text)) store_2021_tk &lt;- store_2021_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) %&gt;% count(word, sort = T) store_2021_tk &lt;- store_2021_tk %&gt;% filter(!word %in% c(&quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) %&gt;% filter(str_length(word) &gt; 1) %&gt;% slice_max(n, n = 15) %&gt;% mutate(word = reorder(word, n)) store_2021_tk %&gt;% ggplot(aes(word, n)) + geom_col() + coord_flip() + labs(title = &quot;편의점 총빈도 (2021)&quot;) 3.0.3.2 2) 편의점 (2022. 01. 01. ~ 2022. 10. 31. / 약 10개월) store_2022_df &lt;- store_2022_df %&gt;% distinct(제목, .keep_all = T) %&gt;% mutate(ID = factor(row_number())) %&gt;% mutate(label = &quot;0&quot;) %&gt;% unite(제목, 본문, col = &quot;text&quot;, sep = &quot; &quot;) %&gt;% mutate(text = str_squish(text)) store_2022_tk &lt;- store_2022_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) %&gt;% count(word, sort = T) store_2022_tk &lt;- store_2022_tk %&gt;% filter(!word %in% c(&quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) %&gt;% filter(str_length(word) &gt; 1) %&gt;% slice_max(n, n = 15) %&gt;% mutate(word = reorder(word, n)) store_2022_tk %&gt;% ggplot(aes(word, n)) + geom_col() + coord_flip() + labs(title = &quot;편의점 총빈도 (2022)&quot;) 3.0.3.3 3) 분석 전반적으로 ‘출시’, ‘판매’, ‘리테일’ 등 편의점의 기본적인 기능과 관련된 단어들이 많이 언급되고 있음. 2021년에는 ’맥주’가, 2022년에는 ’키트’가 주요 상품으로 보임. 여기서 ’키트’는 코로나19 단어와 함께 있는 것으로 보아 ’코로나 자가진단키트’를 의미함. 2021년 총빈도를 살펴보면 CU, GS25, 세븐일레븐 순으로 편의점 브랜드 언급이 많았음. 그리고 CU의 경우, 2021년과 2022년에 모두 언급된 유일한 브랜드임. 3.0.4 4. 자료분석-상대빈도 weighted_log_odds_df &lt;- bind_rows(store_2021_tk, store_2022_tk, .id = &quot;party&quot;) %&gt;% bind_log_odds(set = party, feature = word, n = n) %&gt;% arrange(-log_odds_weighted) library(gt) library(dplyr) store_2021.2022_df &lt;- bind_cols( weighted_log_odds_df %&gt;% group_by(party = ifelse(party == 1, &quot;store(2021)&quot;, &quot;store(2022)&quot;)) %&gt;% arrange(party) %&gt;% select(-party) %&gt;% head(15), weighted_log_odds_df %&gt;% group_by(party = ifelse(party == 1, &quot;store(2021)&quot;, &quot;store(2022)&quot;)) %&gt;% arrange(desc(party)) %&gt;% select(-party) %&gt;% head(15) ) ## Adding missing grouping variables: `party` ## Adding missing grouping variables: `party` ## New names: store_2021.2022_df &lt;- store_2021.2022_df[-c(1,5)] store_2021.2022_df %&gt;% gt() %&gt;% tab_header( &quot;상대적으로 많이 사용한 단어&quot; ) %&gt;% tab_spanner( label = &quot;store (2021)&quot;, columns = 1:3 ) %&gt;% tab_spanner( label = &quot;store (2022)&quot;, columns = 4:6 ) %&gt;% cols_label( word...2 = &quot;명사&quot;, n...3 = &quot;빈도&quot;, log_odds_weighted...4 = &quot;가중상대빈도&quot;, word...6 = &quot;명사&quot;, n...7 = &quot;빈도&quot;, log_odds_weighted...8 = &quot;가중상대빈도&quot; ) %&gt;% fmt_number( columns = starts_with(&quot;log&quot;), decimals = 2 ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gxyqhizvpd .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gxyqhizvpd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gxyqhizvpd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #gxyqhizvpd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gxyqhizvpd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gxyqhizvpd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gxyqhizvpd .gt_column_spanner_outer:first-child { padding-left: 0; } #gxyqhizvpd .gt_column_spanner_outer:last-child { padding-right: 0; } #gxyqhizvpd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gxyqhizvpd .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gxyqhizvpd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gxyqhizvpd .gt_from_md > :first-child { margin-top: 0; } #gxyqhizvpd .gt_from_md > :last-child { margin-bottom: 0; } #gxyqhizvpd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gxyqhizvpd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #gxyqhizvpd .gt_row_group_first td { border-top-width: 2px; } #gxyqhizvpd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #gxyqhizvpd .gt_first_summary_row.thick { border-top-width: 2px; } #gxyqhizvpd .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gxyqhizvpd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gxyqhizvpd .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gxyqhizvpd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gxyqhizvpd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_left { text-align: left; } #gxyqhizvpd .gt_center { text-align: center; } #gxyqhizvpd .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gxyqhizvpd .gt_font_normal { font-weight: normal; } #gxyqhizvpd .gt_font_bold { font-weight: bold; } #gxyqhizvpd .gt_font_italic { font-style: italic; } #gxyqhizvpd .gt_super { font-size: 65%; } #gxyqhizvpd .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #gxyqhizvpd .gt_asterisk { font-size: 100%; vertical-align: 0; } #gxyqhizvpd .gt_indent_1 { text-indent: 5px; } #gxyqhizvpd .gt_indent_2 { text-indent: 10px; } #gxyqhizvpd .gt_indent_3 { text-indent: 15px; } #gxyqhizvpd .gt_indent_4 { text-indent: 20px; } #gxyqhizvpd .gt_indent_5 { text-indent: 25px; } 상대적으로 많이 사용한 단어 store (2021) store (2022) 명사 빈도 가중상대빈도 명사 빈도 가중상대빈도 맥주 2437 35.14 가격 3058 40.40 gs 2397 34.83 키트 2479 36.06 지난해 2169 33.02 검사 2159 33.50 매출 2119 32.62 제품 2025 32.38 세븐일레븐 2018 31.78 들이 1934 31.60 리테일 2814 2.54 판매 3459 2.53 서비스 2680 2.08 출시 3360 −0.08 코로나19 2410 1.58 상품 2473 −0.28 운영 2408 0.91 경찰 2192 −0.56 서울 2526 0.81 cu 3041 −0.59 cu 3277 0.58 서울 2286 −0.82 경찰 2376 0.55 운영 2157 −0.92 상품 2615 0.27 코로나19 2036 −1.60 출시 3497 0.08 서비스 2188 −2.11 판매 3018 −2.53 리테일 2222 −2.58 2021년에는 ‘배달’, ‘온라인’ 등 비대면 서비스와 관련된 단어 빈도가 상대적으로 높게 나타남. 2021년에는 ’맥주’가, 2022년에는 ’소주’가 많이 언급되면서 편의점에서의 주류 판매가 주요 트렌드임을 알 수 있음. 3.0.5 5. 감정분석 3.0.5.1 1) 사전 데이터 프레임 만들기 # pkg_v &lt;- c(&quot;tidyverse&quot;, &quot;tidytext&quot;, &quot;epubr&quot;, &quot;RcppMeCab&quot;, &quot;KoNLP&quot; ) # lapply(pkg_v, require, ch = T) # url_v &lt;- &quot;https://github.com/park1200656/KnuSentiLex/archive/refs/heads/master.zip&quot; # dest_v &lt;- &quot;data/knusenti.zip&quot; # download.file(url = url_v, destfile = dest_v, mode = &quot;wb&quot;) # unzip(&quot;knusenti.zip&quot;, exdir=outPath) senti_name_v &lt;- list.files(&quot;data/knusenti/KnuSentiLex-master/.&quot;)[9] senti_dic_df &lt;- read_tsv(str_c(&quot;data/knusenti/KnuSentiLex-master/&quot;, senti_name_v), col_names = F) ## Rows: 14855 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;\\t&quot; ## chr (1): X1 ## dbl (1): X2 ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. senti_dic_df &lt;- senti_dic_df %&gt;% rename(word = X1, sScore = X2) knu_dic_df &lt;- senti_dic_df %&gt;% filter(!is.na(sScore)) 3.0.5.2 2) 편의점(2021) store_2021_senti_df &lt;- store_2021_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% count(word, sScore, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% mutate(word = reorder(word, n)) %&gt;% slice_head(n = 20) ## Joining, by = &quot;word&quot; store_2021_senti_df %&gt;% ggplot() + geom_col(aes(n, word, fill = sScore), show.legend = F) + labs(title = &quot;편의점 감정빈도 분석 (2021)&quot;) store_2021_df %&gt;% unnest_tokens(word, text) %&gt;% left_join(knu_dic_df) %&gt;% mutate(sScore = ifelse(sScore &gt;= 1, &quot;긍정&quot;, ifelse(sScore &lt;= -1, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% count(sScore) ## Joining, by = &quot;word&quot; ## # A tibble: 4 × 2 ## sScore n ## &lt;chr&gt; &lt;int&gt; ## 1 긍정 14044 ## 2 부정 7482 ## 3 중립 530 ## 4 &lt;NA&gt; 1074071 store_2021_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% mutate(emotion = ifelse(sScore &gt; 0, &quot;긍정&quot;, ifelse(sScore &lt; 0, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% mutate(label = ifelse(sScore &gt; 0, &quot;1&quot;, ifelse(sScore &lt; 0, &quot;0&quot;, &quot;2&quot;))) %&gt;% filter(label != &quot;중립&quot;) %&gt;% count(word, emotion, label, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% group_by(label = ifelse(label &gt; 0, &quot;긍정&quot;, &quot;부정&quot;)) %&gt;% slice_head(n = 15) %&gt;% ggplot(aes(x = n, y = reorder(word, n), fill = label)) + geom_col(show.legend = F) + facet_wrap(~label, scale = &quot;free&quot;) + labs(title = &quot;편의점 긍정어 부정어 (2021)&quot;) ## Joining, by = &quot;word&quot; 편의점(2021) 긍정 이미지 : ‘할인’, ‘인기’, ‘혜택’, ‘이벤트’. ‘안전’, ‘사랑’, ‘혁신’ 편의점(2021) 부정 이미지 : ‘폭행’, ’범죄’의 경우 편의점과 직접적연 연관이라기 보다는 관련 사건들을 설명하는데 사용됨. ’부담’의 경우 부정적인 단어를 활용하여 마케팅을 하면서 나타남. ’혐오’는 GS25의 홍보포스터가 남성 혐오 논란을 일으키면서 높은 비중을 차지함. 3.0.5.3 3) 편의점(2022) store_2022_senti_df &lt;- store_2022_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% count(word, sScore, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% mutate(word = reorder(word, n)) %&gt;% slice_head(n = 20) ## Joining, by = &quot;word&quot; store_2022_senti_df %&gt;% ggplot() + geom_col(aes(n, word, fill = sScore), show.legend = F) + labs(title = &quot;편의점 감정빈도 분석 (2022)&quot;) store_2022_df %&gt;% unnest_tokens(word, text) %&gt;% left_join(knu_dic_df) %&gt;% mutate(sScore = ifelse(sScore &gt;= 1, &quot;긍정&quot;, ifelse(sScore &lt;= -1, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% count(sScore) ## Joining, by = &quot;word&quot; ## # A tibble: 4 × 2 ## sScore n ## &lt;chr&gt; &lt;int&gt; ## 1 긍정 12197 ## 2 부정 7269 ## 3 중립 573 ## 4 &lt;NA&gt; 1045330 store_2022_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% mutate(emotion = ifelse(sScore &gt; 0, &quot;긍정&quot;, ifelse(sScore &lt; 0, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% mutate(label = ifelse(sScore &gt; 0, &quot;1&quot;, ifelse(sScore &lt; 0, &quot;0&quot;, &quot;2&quot;))) %&gt;% filter(label != &quot;중립&quot;) %&gt;% count(word, emotion, label, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% group_by(label = ifelse(label &gt; 0, &quot;긍정&quot;, &quot;부정&quot;)) %&gt;% slice_head(n = 15) %&gt;% ggplot(aes(x = n, y = reorder(word, n), fill = label)) + geom_col(show.legend = F) + facet_wrap(~label, scale = &quot;free&quot;) + labs(title = &quot;편의점 긍정어 부정어 (2022)&quot;) ## Joining, by = &quot;word&quot; 편의점(2022) 긍정 이미지 : ‘인기’, ‘할인’, ‘이벤트’, ‘이벤트’. ‘안정’, ‘혁신’, ‘성공’ 편의점(2022) 부정 이미지 : ‘부담’의 경우 부정적인 단어를 활용하여 마케팅을 하면서 나타남. ’폭행’, ’범죄’의 경우 편의점과 직접적연 연관이라기 보다는 관련 사건들을 설명하는데 사용됨.’장애인’의 경우, 장애인 직업 훈련과 관련하여 일자리 창출 측면에서 긍정적인 의미와 장애인 편의시설이 갖추어질 필요가 있다는 장애인 이동권 측면에서 부정적인 의미를 함께 내포하고 있음. 3.0.6 6. 토픽모델링 3.0.6.1 1) 편의점(2021) store_2021_topic_tk &lt;- store_2021_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) store_2021_topic_tk &lt;- store_2021_topic_tk %&gt;% filter(!word %in% c(&quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) store_2021_combined_df &lt;- store_2021_topic_tk %&gt;% group_by(ID) %&gt;% summarise(text2 = str_flatten(word, &quot; &quot;)) %&gt;% ungroup() %&gt;% inner_join(store_2021_df, by = &quot;ID&quot;) library(stm) library(tm) processed &lt;- store_2021_df %&gt;% textProcessor( documents = store_2021_combined_df$text2, metadata = ., wordLengths = c(2, Inf) ) ## Building corpus... ## Converting to Lower Case... ## Removing punctuation... ## Removing stopwords... ## Removing numbers... ## Stemming... ## Creating Output... out &lt;- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 0) docs &lt;- out$documents vocab &lt;- out$vocab meta &lt;- out$meta topicN &lt;- c(3, 10) #storage &lt;- searchK(out$documents, out$vocab, K = topicN) store_2021_stm_fit &lt;- stm( documents = docs, vocab = vocab, K = 6, data = meta, max.em.its = 75, init.type = &quot;Spectral&quot;, seed = 25, verbose = F ) #labelTopics(GS25_stm_fit) store_2021_topic_name &lt;- tibble(topic = 1:6, name = c(&quot;1. 코로나 상황&quot;, &quot;2. 제품 출시&quot;, &quot;3. 범죄 및 논란&quot;, &quot;4. 결제 방식&quot;, &quot;5. 유통&quot;, &quot;6. 점포 운영&quot;)) store_2021_td_beta &lt;- store_2021_stm_fit %&gt;% tidy(matrix = &#39;beta&#39;) store_2021_topic_name &lt;- store_2021_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 7) %&gt;% left_join(store_2021_topic_name, by = &quot;topic&quot;) store_2021_topic_name %&gt;% ggplot(aes(x = beta, y = reorder_within(term, beta, name), # 각 주제별로 재정렬 fill = name)) + geom_col(show.legend = F) + facet_wrap(~name, scales = &quot;free&quot;) + scale_y_reordered() + # 재정렬한 y축의 값 설정 labs(x = expression(&quot;단어 확률분포: &quot;~beta), y = NULL, title = &quot;편의점 주제별 단어 확률 분포 (2021)&quot;, subtitle = &quot;주제별로 다른 단어들로 군집&quot;) + theme(plot.title = element_text(size = 20)) 3.0.6.2 2) 편의점(2022) store_2022_topic_tk &lt;- store_2022_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) store_2022_topic_tk &lt;- store_2022_topic_tk %&gt;% filter(!word %in% c(&quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) store_2022_combined_df &lt;- store_2022_topic_tk %&gt;% group_by(ID) %&gt;% summarise(text2 = str_flatten(word, &quot; &quot;)) %&gt;% ungroup() %&gt;% inner_join(store_2021_df, by = &quot;ID&quot;) library(stm) library(tm) processed &lt;- store_2022_df %&gt;% textProcessor( documents = store_2022_combined_df$text2, metadata = ., wordLengths = c(2, Inf) ) ## Building corpus... ## Converting to Lower Case... ## Removing punctuation... ## Removing stopwords... ## Removing numbers... ## Stemming... ## Creating Output... out &lt;- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 0) docs &lt;- out$documents vocab &lt;- out$vocab meta &lt;- out$meta topicN &lt;- c(3, 10) #storage &lt;- searchK(out$documents, out$vocab, K = topicN) store_2022_stm_fit &lt;- stm( documents = docs, vocab = vocab, K = 6, data = meta, max.em.its = 75, init.type = &quot;Spectral&quot;, seed = 25, verbose = F ) #labelTopics(GS25_stm_fit) store_2022_topic_name &lt;- tibble(topic = 1:6, name = c(&quot;1. 범죄 및 논란&quot;, &quot;2. 점포 운영&quot;, &quot;3. 제품 출시&quot;, &quot;4. 프로모션&quot;, &quot;5. 코로나 상황&quot;, &quot;6. 유통&quot;)) store_2022_td_beta &lt;- store_2022_stm_fit %&gt;% tidy(matrix = &#39;beta&#39;) store_2022_topic_name &lt;- store_2022_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 7) %&gt;% left_join(store_2022_topic_name, by = &quot;topic&quot;) store_2022_topic_name %&gt;% ggplot(aes(x = beta, y = reorder_within(term, beta, name), # 각 주제별로 재정렬 fill = name)) + geom_col(show.legend = F) + facet_wrap(~name, scales = &quot;free&quot;) + scale_y_reordered() + # 재정렬한 y축의 값 설정 labs(x = expression(&quot;단어 확률분포: &quot;~beta), y = NULL, title = &quot;편의점 주제별 단어 확률 분포 (2022)&quot;, subtitle = &quot;주제별로 다른 단어들로 군집&quot;) + theme(plot.title = element_text(size = 20)) 3.0.7 7. 관련보도 상위 주제어 3.0.7.1 1) 편의점(2021) store_2021_td_gamma &lt;- store_2021_stm_fit %&gt;% tidy(matrix = &quot;gamma&quot;) store_2021_top_terms &lt;- store_2021_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 5) %&gt;% select(topic, term) %&gt;% summarise(terms = str_flatten(term, collapse = &quot;, &quot;)) store_2021_gamma_terms &lt;- store_2021_td_gamma %&gt;% group_by(topic) %&gt;% summarise(gamma = mean(gamma)) %&gt;% left_join(store_2021_top_terms, by = &#39;topic&#39;) %&gt;% left_join(store_2021_topic_name, by = &#39;topic&#39;) store_2021_gamma_terms %&gt;% ggplot(aes(x = gamma, y = reorder(name, gamma), fill = name)) + geom_col(show.legend = F) + geom_text(aes(label = round(gamma, 2)), # 소수점 2자리 hjust = 1.15) + # 라벨을 막대도표 안쪽으로 이동 geom_text(aes(label = terms), hjust = -0.05) + # 단어를 막대도표 바깥으로 이동 #scale_x_continuous(expand = c(0, 0), # x축 막대 위치를 Y축쪽으로 조정 # limit = c(0, 1)) + # x축 범위 설정 labs(x = expression(&quot;문서 확률분포&quot;~(gamma)), y = NULL, title = &quot;편의점 관련보도 상위 주제어 (2021)&quot;, subtitle = &quot;주제별로 기여도가 높은 단어 중심&quot;) + theme(plot.title = element_text(size = 20)) ‘맥주’ 관련 상품 판매 및 출시가 주요 트렌드임을 알 수 있음. 코로나 상황으로 인하여 사회적 거리두기, 운영 시간 등 고려해야 할 점들이 있었음. 더불어 코로나 상황으로 인하여 ’배달’과 같은 비대면 서비스가 활성화됨. ’지역’기반의 운영이 점포 운영에 있어 주요 키워드로 나타남. 일상생활 반경 내 편의점의 갯수가 증가함에 따라 범죄 및 치안과 관련하여 ’편의점’에 대한 언급이 많이 나타남. ‘카드’, ‘포인트’ 등 결제할 수 있는 방식이 다양해졌으며, ‘택배’ 등과 같은 부수적인 서비스도 편의점 내에서 이용가능하게 됨. 3.0.7.2 2) 편의점(2022) store_2022_td_gamma &lt;- store_2022_stm_fit %&gt;% tidy(matrix = &quot;gamma&quot;) store_2022_top_terms &lt;- store_2022_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 5) %&gt;% select(topic, term) %&gt;% summarise(terms = str_flatten(term, collapse = &quot;, &quot;)) store_2022_gamma_terms &lt;- store_2022_td_gamma %&gt;% group_by(topic) %&gt;% summarise(gamma = mean(gamma)) %&gt;% left_join(store_2022_top_terms, by = &#39;topic&#39;) %&gt;% left_join(store_2022_topic_name, by = &#39;topic&#39;) store_2022_gamma_terms %&gt;% ggplot(aes(x = gamma, y = reorder(name, gamma), fill = name)) + geom_col(show.legend = F) + geom_text(aes(label = round(gamma, 2)), # 소수점 2자리 hjust = 1.15) + # 라벨을 막대도표 안쪽으로 이동 geom_text(aes(label = terms), hjust = -0.05) + # 단어를 막대도표 바깥으로 이동 #scale_x_continuous(expand = c(0, 0), # x축 막대 위치를 Y축쪽으로 조정 # limit = c(0, 1)) + # x축 범위 설정 labs(x = expression(&quot;문서 확률분포&quot;~(gamma)), y = NULL, title = &quot;편의점 관련보도 상위 주제어 (2022)&quot;, subtitle = &quot;주제별로 기여도가 높은 단어 중심&quot;) + theme(plot.title = element_text(size = 20)) ‘맥주’ 관련 상품 판매 및 출시가 주요 트렌드임을 알 수 있음. 최근 물가 상승으로 인하여 가격이 인상되는 제품들이 있는데, 이와 대비되게 가격 할인 이벤트를 함께 진행함. 그리고 ’포켓몬’과 같이 특정 캐릭터 등과 콜라보레이션을 하여 제품 및 이벤트를 진행함. 편의점이 코로나 자가진단키트 주요 구매처 역할을 하고 있음. 일상생활 반경 내 편의점의 갯수가 증가함에 따라 범죄 및 치안과 관련하여 ‘편의점’에 대한 언급이 많이 나타남. 편의점에 기본적인 판매 기능뿐만 아니라 ’청소년’, ‘안전’ 등 동네 지킴이 역할을 하는 모습을 보이고 있음. 3.0.8 8. 결론 3.0.8.1 1) 이슈 및 트렌드 비교 분석 2021년, 2022년 모두 ‘맥주’, ‘소주’ 등 주류 상품 출시 및 판매에 집중하는 모습을 보이고 있고, 이에 대해 소비자로 하여금 긍정적인 반응을 얻고 있음. 2021년 ‘지역’ 기반의 점포 운영이 키워드로 등장하였는데, 2022년 편의점에서 ‘청소년’, ‘안전’ 등 동네 치안과 관련하여 여러 캠페인을 실시하는 것으로 보아 ’동네 거점 기능’이 더 고도화되었음을 알 수 있음. 2021년에는 ‘결제 서비스’, ‘배달 서비스’ 등 편의점에 기본적인 기능에 집중을 하였다면, 2022년에는 ‘포켓몬’ 등 타 브랜드와의 콜라보레이션을 통해 프로모션을 펼치고 있음. 3.0.8.2 2) 앞으로의 편의점 방향성 동네 거점 기능 : 커머스 산업군에 있어 ’편의점’이 가지고 있는 주요 특징은 동네 곳곳에 점포가 위치하고 있다는 것임. 이 특징을 극대화하기 위해 ’동네 거점 기능’이 극대화되고 있으며 이러한 흐름에 맞추어 캠페인 혹은 편의점 기능을 개선할 필요가 있음. 서비스 및 제품의 차별화 : 타 브랜드와의 콜라보를 통해 새로운 상품을 출시하거나 좀 더 편리한 서비스를 제공하고 있는 추세. 단순 유통 중심의 커머스 개념에서 벗어나 브랜드만의 특색을 갖출 필요가 있음. "],["언론보도-분석을-통한-gs25의-연도별-평판-비교분석.html", "Chapter 4 언론보도 분석을 통한 GS25의 연도별 평판 비교분석", " Chapter 4 언론보도 분석을 통한 GS25의 연도별 평판 비교분석 4.0.1 1. 개요 4.0.1.1 1) 분석주제 및 선정 이유 분석 주제 : 언론보도 분석을 통한 GS25의 연도별 평판 비교 분석 주제 선정 이유 : 2022년 10월 한국기업평판연구소에 따르면, 1위 CU, 2위 세븐일레븐, 4위 GS25로 편의점 브랜드 순위를 발표하였다. 브랜드 순위가 낮은 GS25에 효과적인 평판 관리를 제안하고자 이를 중심으로 추가 분석을 하려고 한다. 이전 보고서 “언론보도 분석을 통한 편의점 3사 평판 비교 분석”을 통해 GS25가 ’동네 주요 기점’으로 성장하려는 것을 확인하였다. 이에 대해 GS25가 꾸준히 위와 같은 이미지를 형성하기 위해 어떤 노력들을 하였는지, 이러한 행동에 대해 어떠한 평판이 형성되었는지 확인하고자 한다. 그렇다면 GS25가 앞으로 펼쳐야 할 평판 관리에 대해 좀 더 의미있는 제안을 할 수 있을 것이다. 4.0.1.2 2) 자료분석 방법 자료 유형 : 뉴스 (정치, 사회, 스포츠 뉴스 제외) 자료 출처 : 빅카인즈 자료수집 GS25 (2021) 검색어 : ((GS25) OR (지에스25) OR (gs25) OR (지에스이십오)) 자료 기간 : 2021. 01. 01. ~ 2021. 10. 31. (약 10개월) 총 3883건의 기사 GS25 (2022) 검색어 : ((GS25) OR (지에스25) OR (gs25) OR (지에스이십오)) 자료 기간 : 2022. 01. 01. ~ 2022. 10. 31. (약 10개월) 총 3532건의 기사 4.0.2 2. 자료 수집 4.0.2.1 1) 패키지 설치 package_list &lt;- c(&quot;tidyverse&quot;, &quot;tidytext&quot;, &quot;readxl&quot;, &quot;kableExtra&quot;, &quot;multilinguer&quot;, &quot;RcppMeCab&quot;, &quot;KoNLP&quot;, &quot;lubridate&quot;, &quot;tidylo&quot;, &quot;stm&quot;, &quot;reshape2&quot;, &quot;dplyr&quot;, &quot;ggplot2&quot;, &quot;stringr&quot;, &quot;rvest&quot;, &quot;wordcloud&quot;, &quot;tm&quot;, &quot;VennDiagram&quot;, &quot;gt&quot;) #package_list_installed &lt;- package_list %in% installed.packages()[,&quot;Package&quot;] # new_pkg &lt;- package_list[!package_list_installed] # if(length(new_pkg)) install.packages(new_pkg) lapply(package_list, require, character.only = TRUE) ## [[1]] ## [1] TRUE ## ## [[2]] ## [1] TRUE ## ## [[3]] ## [1] TRUE ## ## [[4]] ## [1] TRUE ## ## [[5]] ## [1] TRUE ## ## [[6]] ## [1] TRUE ## ## [[7]] ## [1] TRUE ## ## [[8]] ## [1] TRUE ## ## [[9]] ## [1] TRUE ## ## [[10]] ## [1] TRUE ## ## [[11]] ## [1] TRUE ## ## [[12]] ## [1] TRUE ## ## [[13]] ## [1] TRUE ## ## [[14]] ## [1] TRUE ## ## [[15]] ## [1] TRUE ## ## [[16]] ## [1] TRUE ## ## [[17]] ## [1] TRUE ## ## [[18]] ## [1] TRUE ## ## [[19]] ## [1] TRUE 4.0.2.2 2) 데이터셋 수집 GS25_2021_df &lt;- readxl::read_excel(&quot;GS25_21_data.xlsx&quot;) %&gt;% select(제목, 본문) GS25_2022_df &lt;- readxl::read_excel(&quot;GS25_22_data.xlsx&quot;) %&gt;% select(제목, 본문) 4.0.3 3. 자료분석-총빈도 4.0.3.1 1) GS25 (2021. 01. 01. ~ 2021. 10. 31. / 약 10개월) GS25_2021_df &lt;- GS25_2021_df %&gt;% distinct(제목, .keep_all = T) %&gt;% mutate(ID = factor(row_number())) %&gt;% mutate(label = &quot;0&quot;) %&gt;% unite(제목, 본문, col = &quot;text&quot;, sep = &quot; &quot;) %&gt;% mutate(text = str_squish(text)) GS25_2021_tk &lt;- GS25_2021_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) %&gt;% count(word, sort = T) GS25_2021_tk &lt;- GS25_2021_tk %&gt;% filter(!word %in% c(&quot;gs&quot;, &quot;gs25&quot;, &quot;리테일&quot;, &quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) %&gt;% filter(str_length(word) &gt; 1) %&gt;% slice_max(n, n = 15) %&gt;% mutate(word = reorder(word, n)) GS25_2021_tk %&gt;% ggplot(aes(word, n)) + geom_col() + coord_flip() + labs(title = &quot;GS25 총빈도 (2021)&quot;) 4.0.3.2 2) GS25 (2022. 01. 01. ~ 2022. 10. 31. / 약 10개월) GS25_2022_df &lt;- GS25_2022_df %&gt;% distinct(제목, .keep_all = T) %&gt;% mutate(ID = factor(row_number())) %&gt;% mutate(label = &quot;0&quot;) %&gt;% unite(제목, 본문, col = &quot;text&quot;, sep = &quot; &quot;) %&gt;% mutate(text = str_squish(text)) GS25_2022_tk &lt;- GS25_2022_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) %&gt;% count(word, sort = T) GS25_2022_tk &lt;- GS25_2022_tk %&gt;% filter(!word %in% c(&quot;gs&quot;, &quot;gs25&quot;, &quot;리테일&quot;, &quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) %&gt;% filter(str_length(word) &gt; 1) %&gt;% slice_max(n, n = 15) %&gt;% mutate(word = reorder(word, n)) GS25_2022_tk %&gt;% ggplot(aes(word, n)) + geom_col() + coord_flip() + labs(title = &quot;GS25 총빈도 (2022)&quot;) 4.0.3.3 3) 분석 주류와 관련하여 2021년에는 ’맥주’가, 2022년에는 ’소주’가 총빈도가 높게 나타남. 2021년에는 ‘배달’, ‘온라인’ 등 비대면 관련 서비스 키워드에 눈에 띔. 2021년과 2022년을 비교하였을 때, CU와 함게 언급이 더 많아졌음을 알 수 있음. 4.0.4 4. 자료분석-상대빈도 weighted_log_odds_df &lt;- bind_rows(GS25_2021_tk, GS25_2022_tk, .id = &quot;party&quot;) %&gt;% bind_log_odds(set = party, feature = word, n = n) %&gt;% arrange(-log_odds_weighted) library(gt) library(dplyr) GS25_2021.2022_df &lt;- bind_cols( weighted_log_odds_df %&gt;% group_by(party = ifelse(party == 1, &quot;GS25(2021)&quot;, &quot;GS25(2022)&quot;)) %&gt;% arrange(party) %&gt;% select(-party) %&gt;% head(15), weighted_log_odds_df %&gt;% group_by(party = ifelse(party == 1, &quot;GS25(2021)&quot;, &quot;GS25(2022)&quot;)) %&gt;% arrange(desc(party)) %&gt;% select(-party) %&gt;% head(15) ) ## Adding missing grouping variables: `party` ## Adding missing grouping variables: `party` ## New names: GS25_2021.2022_df &lt;- GS25_2021.2022_df[-c(1,5)] GS25_2021.2022_df %&gt;% gt() %&gt;% tab_header( &quot;상대적으로 많이 사용한 단어&quot; ) %&gt;% tab_spanner( label = &quot;GS25 (2021)&quot;, columns = 1:3 ) %&gt;% tab_spanner( label = &quot;GS25 (2022)&quot;, columns = 4:6 ) %&gt;% cols_label( word...2 = &quot;명사&quot;, n...3 = &quot;빈도&quot;, log_odds_weighted...4 = &quot;가중상대빈도&quot;, word...6 = &quot;명사&quot;, n...7 = &quot;빈도&quot;, log_odds_weighted...8 = &quot;가중상대빈도&quot; ) %&gt;% fmt_number( columns = starts_with(&quot;log&quot;), decimals = 2 ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gxyqhizvpd .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gxyqhizvpd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gxyqhizvpd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #gxyqhizvpd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gxyqhizvpd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gxyqhizvpd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gxyqhizvpd .gt_column_spanner_outer:first-child { padding-left: 0; } #gxyqhizvpd .gt_column_spanner_outer:last-child { padding-right: 0; } #gxyqhizvpd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gxyqhizvpd .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gxyqhizvpd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gxyqhizvpd .gt_from_md > :first-child { margin-top: 0; } #gxyqhizvpd .gt_from_md > :last-child { margin-bottom: 0; } #gxyqhizvpd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gxyqhizvpd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #gxyqhizvpd .gt_row_group_first td { border-top-width: 2px; } #gxyqhizvpd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #gxyqhizvpd .gt_first_summary_row.thick { border-top-width: 2px; } #gxyqhizvpd .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gxyqhizvpd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gxyqhizvpd .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gxyqhizvpd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gxyqhizvpd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gxyqhizvpd .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gxyqhizvpd .gt_left { text-align: left; } #gxyqhizvpd .gt_center { text-align: center; } #gxyqhizvpd .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gxyqhizvpd .gt_font_normal { font-weight: normal; } #gxyqhizvpd .gt_font_bold { font-weight: bold; } #gxyqhizvpd .gt_font_italic { font-style: italic; } #gxyqhizvpd .gt_super { font-size: 65%; } #gxyqhizvpd .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #gxyqhizvpd .gt_asterisk { font-size: 100%; vertical-align: 0; } #gxyqhizvpd .gt_indent_1 { text-indent: 5px; } #gxyqhizvpd .gt_indent_2 { text-indent: 10px; } #gxyqhizvpd .gt_indent_3 { text-indent: 15px; } #gxyqhizvpd .gt_indent_4 { text-indent: 20px; } #gxyqhizvpd .gt_indent_5 { text-indent: 25px; } 상대적으로 많이 사용한 단어 GS25 (2021) GS25 (2022) 명사 빈도 가중상대빈도 명사 빈도 가중상대빈도 배달 723 19.17 소주 798 20.52 논란 564 16.79 키트 661 18.55 제공 463 15.14 가격 585 17.38 온라인 461 15.11 제품 502 16.04 서비스 996 4.30 판매 1065 1.09 고객 811 2.85 cu 608 0.71 맥주 679 1.17 gs25는 652 0.64 상품 1210 0.85 출시 1048 0.49 매출 651 0.76 업계 715 0.21 운영 664 0.05 운영 639 −0.05 업계 715 −0.21 매출 557 −0.77 출시 1020 −0.49 상품 1066 −0.86 gs25는 608 −0.64 맥주 544 −1.19 cu 558 −0.71 고객 498 −2.92 판매 965 −1.08 서비스 503 −4.44 4.0.5 5. 감정분석 4.0.5.1 1) 사전 데이터 프레임 만들기 # pkg_v &lt;- c(&quot;tidyverse&quot;, &quot;tidytext&quot;, &quot;epubr&quot;, &quot;RcppMeCab&quot;, &quot;KoNLP&quot; ) # lapply(pkg_v, require, ch = T) # url_v &lt;- &quot;https://github.com/park1200656/KnuSentiLex/archive/refs/heads/master.zip&quot; # dest_v &lt;- &quot;data/knusenti.zip&quot; # download.file(url = url_v, destfile = dest_v, mode = &quot;wb&quot;) # unzip(&quot;knusenti.zip&quot;, exdir=outPath) senti_name_v &lt;- list.files(&quot;data/knusenti/KnuSentiLex-master/.&quot;)[9] senti_dic_df &lt;- read_tsv(str_c(&quot;data/knusenti/KnuSentiLex-master/&quot;, senti_name_v), col_names = F) ## Rows: 14855 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;\\t&quot; ## chr (1): X1 ## dbl (1): X2 ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. senti_dic_df &lt;- senti_dic_df %&gt;% rename(word = X1, sScore = X2) knu_dic_df &lt;- senti_dic_df %&gt;% filter(!is.na(sScore)) 4.0.5.2 2) GS25(2021) GS25_2021_senti_df &lt;- GS25_2021_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% count(word, sScore, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% mutate(word = reorder(word, n)) %&gt;% slice_head(n = 20) ## Joining, by = &quot;word&quot; GS25_2021_senti_df %&gt;% ggplot() + geom_col(aes(n, word, fill = sScore), show.legend = F) + labs(title = &quot;GS25 감정빈도 분석 (2021)&quot;) GS25_2021_df %&gt;% unnest_tokens(word, text) %&gt;% left_join(knu_dic_df) %&gt;% mutate(sScore = ifelse(sScore &gt;= 1, &quot;긍정&quot;, ifelse(sScore &lt;= -1, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% count(sScore) ## Joining, by = &quot;word&quot; ## # A tibble: 4 × 2 ## sScore n ## &lt;chr&gt; &lt;int&gt; ## 1 긍정 3123 ## 2 부정 1041 ## 3 중립 134 ## 4 &lt;NA&gt; 218559 GS25_2021_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% mutate(emotion = ifelse(sScore &gt; 0, &quot;긍정&quot;, ifelse(sScore &lt; 0, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% mutate(label = ifelse(sScore &gt; 0, &quot;1&quot;, ifelse(sScore &lt; 0, &quot;0&quot;, &quot;2&quot;))) %&gt;% filter(label != &quot;중립&quot;) %&gt;% count(word, emotion, label, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% group_by(label = ifelse(label &gt; 0, &quot;긍정&quot;, &quot;부정&quot;)) %&gt;% slice_head(n = 15) %&gt;% ggplot(aes(x = n, y = reorder(word, n), fill = label)) + geom_col(show.legend = F) + facet_wrap(~label, scale = &quot;free&quot;) + labs(title = &quot;GS25 긍정어 부정어 (2021)&quot;) ## Joining, by = &quot;word&quot; GS25(2021) 긍정 이미지 : ‘이벤트’, ‘할인’, ‘인기’, ‘혜택’. ‘고급’, ‘최저가’ GS25(2021) 부정 이미지 : ‘혐오’는 GS25의 홍보포스터가 남성 혐오 논란을 일으키면서 높은 비중을 차지함. ’부담’, ‘화재’ 단어의 경우 부정적인 단어를 활용하여 마케팅을 하면서 나타남. ‘편의점 택배 부담없이 GS25, 반값택배’, ‘화재 시, GS25 소화기 제공’ 문구 활용을 볼 수 있음. ’장애인’의 경우, ’늘봄스토어’를 통해 장애인 취업 기회를 제공한다는 내용임. 4.0.5.3 3) GS25(2022) GS25_2022_senti_df &lt;- GS25_2022_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% count(word, sScore, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% mutate(word = reorder(word, n)) %&gt;% slice_head(n = 20) ## Joining, by = &quot;word&quot; GS25_2022_senti_df %&gt;% ggplot() + geom_col(aes(n, word, fill = sScore), show.legend = F) + labs(title = &quot;GS25 감정빈도 분석 (2022)&quot;) GS25_2022_df %&gt;% unnest_tokens(word, text) %&gt;% left_join(knu_dic_df) %&gt;% mutate(sScore = ifelse(sScore &gt;= 1, &quot;긍정&quot;, ifelse(sScore &lt;= -1, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% count(sScore) ## Joining, by = &quot;word&quot; ## # A tibble: 4 × 2 ## sScore n ## &lt;chr&gt; &lt;int&gt; ## 1 긍정 2563 ## 2 부정 754 ## 3 중립 75 ## 4 &lt;NA&gt; 199275 GS25_2022_df %&gt;% unnest_tokens(word, text, token = extractNoun) %&gt;% inner_join(knu_dic_df) %&gt;% mutate(emotion = ifelse(sScore &gt; 0, &quot;긍정&quot;, ifelse(sScore &lt; 0, &quot;부정&quot;, &quot;중립&quot;))) %&gt;% mutate(label = ifelse(sScore &gt; 0, &quot;1&quot;, ifelse(sScore &lt; 0, &quot;0&quot;, &quot;2&quot;))) %&gt;% filter(label != &quot;중립&quot;) %&gt;% count(word, emotion, label, sort = T) %&gt;% filter(str_length(word) &gt; 1) %&gt;% group_by(label = ifelse(label &gt; 0, &quot;긍정&quot;, &quot;부정&quot;)) %&gt;% slice_head(n = 15) %&gt;% ggplot(aes(x = n, y = reorder(word, n), fill = label)) + geom_col(show.legend = F) + facet_wrap(~label, scale = &quot;free&quot;) + labs(title = &quot;GS25 긍정어 부정어 (2022)&quot;) ## Joining, by = &quot;word&quot; GS25(2022) 긍정 이미지 : ‘인기’, ‘할인’, ‘이벤트’, ‘혜택’. ‘맛집’, ‘최저가’ GS25(2022) 부정 이미지 : ‘부담’, ‘화재’ 단어의 경우 부정적인 단어를 활용하여 마케팅을 하면서 나타남. ‘편의점 택배 부담없이 GS25, 반값택배’, ‘화재 시, GS25 소화기 제공’ 문구 활용을 볼 수 있음. ’피해’의 경우, ’국내 최초 가맹점 사기 피해 보상 보험 지원’과 ’남혐 논란, GS25피해 CU로’라는 내용으로 살펴볼 수 있음. 4.0.6 6. 토픽모델링 4.0.6.1 1) GS25(2021) GS25_2021_topic_tk &lt;- GS25_2021_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) GS25_2021_topic_tk &lt;- GS25_2021_topic_tk %&gt;% filter(!word %in% c(&quot;gs&quot;, &quot;gs25&quot;, &quot;리테일&quot;, &quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) GS25_2021_combined_df &lt;- GS25_2021_topic_tk %&gt;% group_by(ID) %&gt;% summarise(text2 = str_flatten(word, &quot; &quot;)) %&gt;% ungroup() %&gt;% inner_join(GS25_2021_df, by = &quot;ID&quot;) library(stm) library(tm) processed &lt;- GS25_2021_df %&gt;% textProcessor( documents = GS25_2021_combined_df$text2, metadata = ., wordLengths = c(2, Inf) ) ## Building corpus... ## Converting to Lower Case... ## Removing punctuation... ## Removing stopwords... ## Removing numbers... ## Stemming... ## Creating Output... out &lt;- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 0) docs &lt;- out$documents vocab &lt;- out$vocab meta &lt;- out$meta topicN &lt;- c(3, 10) #storage &lt;- searchK(out$documents, out$vocab, K = topicN) GS25_2021_stm_fit &lt;- stm( documents = docs, vocab = vocab, K = 6, data = meta, max.em.its = 75, init.type = &quot;Spectral&quot;, seed = 25, verbose = F ) #labelTopics(GS25_stm_fit) GS25_2021_topic_name &lt;- tibble(topic = 1:6, name = c(&quot;1. 혐오 논란&quot;, &quot;2. 주류 판매&quot;, &quot;3. 운영&quot;, &quot;4. 협약&quot;, &quot;5. 결제 방식&quot;, &quot;6. 배달서비스&quot;)) GS25_2021_td_beta &lt;- GS25_2021_stm_fit %&gt;% tidy(matrix = &#39;beta&#39;) GS25_2021_topic_name &lt;- GS25_2021_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 7) %&gt;% left_join(GS25_2021_topic_name, by = &quot;topic&quot;) GS25_2021_topic_name %&gt;% ggplot(aes(x = beta, y = reorder_within(term, beta, name), # 각 주제별로 재정렬 fill = name)) + geom_col(show.legend = F) + facet_wrap(~name, scales = &quot;free&quot;) + scale_y_reordered() + # 재정렬한 y축의 값 설정 labs(x = expression(&quot;단어 확률분포: &quot;~beta), y = NULL, title = &quot;GS25 주제별 단어 확률 분포 (2021)&quot;, subtitle = &quot;주제별로 다른 단어들로 군집&quot;) + theme(plot.title = element_text(size = 20)) 4.0.6.2 2) GS25(2022) GS25_2022_topic_tk &lt;- GS25_2022_df %&gt;% mutate(text = str_remove_all(text, &quot;[^(\\\\w+|\\\\s)]&quot;)) %&gt;% unnest_tokens(word, text, token = extractNoun, drop = F) GS25_2022_topic_tk &lt;- GS25_2022_topic_tk %&gt;% filter(!word %in% c(&quot;gs&quot;, &quot;gs25&quot;, &quot;리테일&quot;, &quot;기자&quot;, &quot;편의점&quot;)) %&gt;% filter(str_detect(word, &quot;[:alpha:]+&quot;)) GS25_2022_combined_df &lt;- GS25_2022_topic_tk %&gt;% group_by(ID) %&gt;% summarise(text2 = str_flatten(word, &quot; &quot;)) %&gt;% ungroup() %&gt;% inner_join(GS25_2021_df, by = &quot;ID&quot;) library(stm) library(tm) processed &lt;- GS25_2022_df %&gt;% textProcessor( documents = GS25_2022_combined_df$text2, metadata = ., wordLengths = c(2, Inf) ) ## Building corpus... ## Converting to Lower Case... ## Removing punctuation... ## Removing stopwords... ## Removing numbers... ## Stemming... ## Creating Output... out &lt;- prepDocuments(processed$documents, processed$vocab, processed$meta, lower.thresh = 0) docs &lt;- out$documents vocab &lt;- out$vocab meta &lt;- out$meta topicN &lt;- c(3, 10) #storage &lt;- searchK(out$documents, out$vocab, K = topicN) GS25_2022_stm_fit &lt;- stm( documents = docs, vocab = vocab, K = 6, data = meta, max.em.its = 75, init.type = &quot;Spectral&quot;, seed = 25, verbose = F ) #labelTopics(GS25_stm_fit) GS25_2022_topic_name &lt;- tibble(topic = 1:6, name = c(&quot;1. 주류 판매&quot;, &quot;2. 경쟁&quot;, &quot;3. 도시락 상품&quot;, &quot;4. 메타버스 활용&quot;, &quot;5. 코로나 상황&quot;, &quot;6. 캐릭터 상품&quot;)) GS25_2022_td_beta &lt;- GS25_2022_stm_fit %&gt;% tidy(matrix = &#39;beta&#39;) GS25_2022_topic_name &lt;- GS25_2022_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 7) %&gt;% left_join(GS25_2022_topic_name, by = &quot;topic&quot;) GS25_2022_topic_name %&gt;% ggplot(aes(x = beta, y = reorder_within(term, beta, name), # 각 주제별로 재정렬 fill = name)) + geom_col(show.legend = F) + facet_wrap(~name, scales = &quot;free&quot;) + scale_y_reordered() + # 재정렬한 y축의 값 설정 labs(x = expression(&quot;단어 확률분포: &quot;~beta), y = NULL, title = &quot;GS25 주제별 단어 확률 분포 (2022)&quot;, subtitle = &quot;주제별로 다른 단어들로 군집&quot;) + theme(plot.title = element_text(size = 20)) 4.0.7 7. 관련보도 상위 주제어 4.0.7.1 1) GS25(2021) GS25_2021_td_gamma &lt;- GS25_2021_stm_fit %&gt;% tidy(matrix = &quot;gamma&quot;) GS25_2021_top_terms &lt;- GS25_2021_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 5) %&gt;% select(topic, term) %&gt;% summarise(terms = str_flatten(term, collapse = &quot;, &quot;)) GS25_2021_gamma_terms &lt;- GS25_2021_td_gamma %&gt;% group_by(topic) %&gt;% summarise(gamma = mean(gamma)) %&gt;% left_join(GS25_2021_top_terms, by = &#39;topic&#39;) %&gt;% left_join(GS25_2021_topic_name, by = &#39;topic&#39;) GS25_2021_gamma_terms %&gt;% ggplot(aes(x = gamma, y = reorder(name, gamma), fill = name)) + geom_col(show.legend = F) + geom_text(aes(label = round(gamma, 2)), # 소수점 2자리 hjust = 1.15) + # 라벨을 막대도표 안쪽으로 이동 geom_text(aes(label = terms), hjust = -0.05) + # 단어를 막대도표 바깥으로 이동 #scale_x_continuous(expand = c(0, 0), # x축 막대 위치를 Y축쪽으로 조정 # limit = c(0, 1)) + # x축 범위 설정 labs(x = expression(&quot;문서 확률분포&quot;~(gamma)), y = NULL, title = &quot;GS25 관련보도 상위 주제어 (2021)&quot;, subtitle = &quot;주제별로 기여도가 높은 단어 중심&quot;) + theme(plot.title = element_text(size = 20)) 주류 판매가 주요 매출 제품으로 파악됨. 페이 결제, 택배 선결제를 바탕으로 ’결제 방식’을 개선하였고, 배달 서비스를 시작하였으며, LG유플러스와 협약하여 AI, 빅데이터 솔루션을 도입하고 LG 유플러스 멤버십 대상 구독 서비스를 선보이기도 하였다. 즉, 2021년의 경우, GS25는 편의점의 기능을 개선하는데 초점을 둠. 남성 혐오 논란이 브랜드에 막대한 부정적인 영향을 미쳤음을 확인할 있음. 4.0.7.2 2) GS25(2022) GS25_2022_td_gamma &lt;- GS25_2022_stm_fit %&gt;% tidy(matrix = &quot;gamma&quot;) GS25_2022_top_terms &lt;- GS25_2022_td_beta %&gt;% group_by(topic) %&gt;% slice_max(beta, n = 5) %&gt;% select(topic, term) %&gt;% summarise(terms = str_flatten(term, collapse = &quot;, &quot;)) GS25_2022_gamma_terms &lt;- GS25_2022_td_gamma %&gt;% group_by(topic) %&gt;% summarise(gamma = mean(gamma)) %&gt;% left_join(GS25_2022_top_terms, by = &#39;topic&#39;) %&gt;% left_join(GS25_2022_topic_name, by = &#39;topic&#39;) GS25_2022_gamma_terms %&gt;% ggplot(aes(x = gamma, y = reorder(name, gamma), fill = name)) + geom_col(show.legend = F) + geom_text(aes(label = round(gamma, 2)), # 소수점 2자리 hjust = 1.15) + # 라벨을 막대도표 안쪽으로 이동 geom_text(aes(label = terms), hjust = -0.05) + # 단어를 막대도표 바깥으로 이동 #scale_x_continuous(expand = c(0, 0), # x축 막대 위치를 Y축쪽으로 조정 # limit = c(0, 1)) + # x축 범위 설정 labs(x = expression(&quot;문서 확률분포&quot;~(gamma)), y = NULL, title = &quot;GS25 관련보도 상위 주제어 (2022)&quot;, subtitle = &quot;주제별로 기여도가 높은 단어 중심&quot;) + theme(plot.title = element_text(size = 20)) 작년과 동일하게 주류판매에 대한 키워드 결집이 높고, 이전과 다르게 ‘소주’ 키워드가 증가함. 세븐일레븐이 미니스톱을 인수한 내용이 많이 언급됨으로 보아 세븐일레븐의 몸집 증가가 기존에 자리잡고 있던 CU, GS25에 큰 영향을 미치는 것으로 보임. 제품 다양화, 할인 이벤트 등을 시행함으로써 도시락 상품에 집중함. 장기적인 관점에서, 로블록스(메타버스 플랫폼) 게임을 개발하여 MZ세대와 알파세대를 대상으로 미래 소비층을 확보하려고 함. 4.0.8 8. 결론 4.0.8.1 1) 평판 비교 2021년에는 편의점 기능에 대한 개선에 초점을 맞추었다면 2022녀에는 회사 및 제품 브랜딩에 더 초점을 맞추는 모습. 2021년에는 LG유플러스 협약을 맺어 AI, 빅데이터 기반 운영을 시도하였으며 결제 방식 다양화 및 편리화, 배송 서비스 운영 등 환경적인 변화에 빠르게 대응하려는 것을 알 수 있음. 2022년에는 경쟁사의 인수 상황이 높게 언급되면서 편의점 경쟁이 치열해지고 있음을 암시. 동시에 원소주, 포켓몬과의 콜라보레이션으로 긍정적인 이슈를 얻고 있으며 도시락 상품 다양화로 GS25만의 특색을 만들어가려고 함을 알 수 있음. 4.0.8.2 2) 평판 전략 방향 GS25는 기능적인 측면과 상품 브랜딩에 있어서는 명확한 컨셉과 개선의 모습을 보이고 있는 부정적인 기업 브랜딩에 대한 대응은 미약하게 나타나고 있음. 이전 보고서 “언론보도 분석을 통한 편의점 평판 비교 분석”에 따르면 GS25가 ‘동네 주요 기점’ 역할로서 장애인 취업 지원, 미아 방지 캠페인, 소화기 제공 등 노력하는 모습들이 타 편의점과 큰 차이점을 보였었는데 그에 비해 평판에 효과적으로 활용되지 못했다고 판단됨. 긍정적인 기업 이미지를 형성하기 위해서는 앞의 내용을 효과적으로 활용할 필요가 있음. 2022년이 되어 편의점들의 사업확장 및 기업 인수를 통해 경쟁이 더 심화되리라 보고 있는데, 이 과정에서 GS25가 편의점 트렌드에 부합하게 평판관리를 하고 있는지도 살펴볼 필요가 있음. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
